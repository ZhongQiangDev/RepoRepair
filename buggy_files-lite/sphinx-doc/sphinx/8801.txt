Let me analyze this step by step:

1. Wrong Behavior:
- When using autodoc with `:inherited-members:` option, annotation-only members (like `attr1: int`) from superclass are treated as "undocumented" and not shown in the documentation unless `:undoc-members:` is specified.

2. Cause Analysis:
- The issue appears to be in how Sphinx's autodoc system handles type annotations in parent classes
- The system is not properly recognizing type annotations as documentation, causing them to be marked as undocumented
- This is likely related to how autodoc processes inherited members and determines what constitutes "documented" vs "undocumented" attributes

3. Most Related Files:
```
sphinx/ext/autodoc/directive.py
sphinx/ext/autodoc/typehints.py
sphinx/domains/python.py
sphinx/ext/autodoc/importer.py
sphinx/ext/autodoc/mock.py
```

These files are ordered by relevance because:
- `autodoc/directive.py` contains the core AutodocDirective class that handles autodoc processing and documentation generation
- `autodoc/typehints.py` specifically handles type hint processing and integration
- `domains/python.py` manages Python-specific documentation features including attribute handling
- `autodoc/importer.py` handles module importing and inspection which affects how inherited members are processed
- `autodoc/mock.py` provides mocking capabilities that could affect how attributes are processed during documentation

The issue likely needs to be addressed primarily in the autodoc directive and typehints handling code to properly recognize type annotations as documentation.
