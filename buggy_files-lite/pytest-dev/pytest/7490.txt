Let me analyze this step by step:

1. Wrong Behavior:
- In pytest 5.x, dynamically adding an xfail marker to a test using `request.node.add_marker(mark)` would treat the failing test as expected (xfail)
- In pytest 6.0.0rc0, the same code raises an assertion error instead of marking the test as xfail

2. Cause Analysis:
- The issue appears to be related to how pytest 6.0 handles dynamically added markers during test execution
- The xfail marker is not being properly recognized or processed when added during runtime
- This suggests changes in the marker handling system between pytest 5.x and 6.0

3. Most Related Files:
Based on the repository information provided, here are the most relevant files ordered by importance:

```
testing/python/metafunc.py
testing/python/fixtures.py
testing/python/collect.py
```

These files are most relevant because:
- metafunc.py contains tests for markers and parametrization, which is closely related to how markers are handled
- fixtures.py includes TestRequestMarking which deals with marker behavior and request.keywords
- collect.py contains core test collection functionality which may affect how markers are processed

The issue likely requires changes to the marker handling system in these files to restore the previous behavior of dynamically added xfail markers.
