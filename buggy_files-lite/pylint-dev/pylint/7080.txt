Let me analyze this step by step:

1. Wrong Behavior:
- When running pylint with `--recursive=y`, the `ignore-paths` setting in pyproject.toml is being completely ignored
- Files under `src/gen/` that should be ignored are still being linted

2. Cause Analysis:
- The issue appears to be in how pylint handles the recursive file scanning in conjunction with ignore paths
- The ignore-paths configuration is not being properly applied when the recursive flag is used
- Looking at the output, we can see files under `src/gen/` are still being checked despite being listed in ignore-paths

3. Most Related Files:
Based on the repository information provided, here are the most relevant files that would need to be modified to fix this issue:

```
pylint/lint/pylinter.py
pylint/checkers/imports.py
pylint/interfaces.py
pylint/typing.py
pylint/checkers/misc.py
```

I selected these files because:
- pylinter.py is the core linting engine that handles file scanning and configuration
- imports.py contains checkers that deal with module paths and imports
- interfaces.py defines core interfaces that may affect how checkers interact with file paths
- typing.py contains type definitions that may impact path handling
- misc.py has additional checkers that could affect path processing

The fix would likely need to start in pylinter.py to ensure the ignore-paths configuration is properly respected during recursive scanning.
