Let me analyze this step by step:

1. Wrong Behavior:
The `convert_to` function is incorrectly combining orthogonal units when converting between units that have different dimensions. In the example, when converting `J*s` to `J`, it returns `joule**(7/9)` which is mathematically incorrect since joules and seconds are orthogonal units that cannot be combined this way.

2. Cause Analysis:
The issue appears to be in the unit conversion logic where the function is attempting to find a mathematical relationship between incompatible units instead of recognizing that joule-seconds and joules are fundamentally different units with different dimensions. The function should either:
- Return the original expression unchanged
- Return the expression in base units
- Raise an error for incompatible unit conversion

3. Relevant Files/Functions Analysis:

sympy/core/evalf.py:
```
sympy/core/evalf.py
function: evalf
class: EvalfMixin
```
These are relevant because they handle numerical evaluation and conversion of expressions, which is part of the unit conversion process.

sympy/core/expr.py:
```
sympy/core/expr.py
class: Expr
```
This is relevant as it's the base class for expressions and likely contains core functionality for handling mathematical transformations.

sympy/core/numbers.py:
```
sympy/core/numbers.py
class: Number
class: Rational
```
These are relevant because they handle numerical values and rational exponents, which appear in the incorrect output `joule**(7/9)`.

sympy/core/sympify.py:
```
sympy/core/sympify.py
function: sympify
```
This is relevant as it's responsible for converting expressions into SymPy format, which is part of the unit conversion process.

sympy/simplify/trigsimp.py:
This file contains no relevant functions/classes.

The core issue likely lies in the interaction between the expression evaluation system (EvalfMixin, Expr) and the number handling system (Number, Rational) when dealing with unit conversions. The sympify function is involved as it handles the conversion of expressions into SymPy's internal format.
