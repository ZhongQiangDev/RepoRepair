Let me analyze this step by step:

1. Wrong Behavior:
The code `mathematica_code(Max(x,2))` produces `'Max(2, x)'` instead of the expected `'Max[x,2]'`. The issues are:
- Wrong brackets: Using parentheses () instead of square brackets []
- Wrong argument order: Arguments are reordered to (2, x) instead of keeping original order (x, 2)

2. Cause Analysis:
The issue appears to be in how the MCodePrinter handles the Max function. The problems are:
- The printer is not properly converting function call parentheses to Mathematica's square bracket syntax
- The printer is potentially reordering arguments without respecting the original order for the Max function

3. File Analysis:

sympy/core/relational.py:
```
This file contains no relevant functions/classes.
```

sympy/printing/codeprinter.py:
```
sympy/printing/codeprinter.py
class: CodePrinter
```
This base class is relevant as it provides the core functionality for code printing that MCodePrinter inherits.

sympy/printing/mathematica.py:
```
sympy/printing/mathematica.py
function: mathematica_code
class: MCodePrinter
```
These are the most relevant components as they directly handle the Mathematica code generation. The MCodePrinter class needs to be modified to:
1. Properly handle the Max function
2. Use square brackets instead of parentheses
3. Preserve argument order

The issue likely needs to be fixed in the MCodePrinter class by either:
- Adding Max to the known_functions dictionary with proper formatting
- Implementing a specific _print_Max method to handle this case
- Modifying how function calls are generally printed to use square brackets
