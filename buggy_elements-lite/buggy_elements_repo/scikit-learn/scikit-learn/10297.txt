Let me analyze this step by step.

1. Wrong Behavior:
The RidgeClassifierCV class does not accept the 'store_cv_values' parameter despite its documentation claiming this parameter is supported. When trying to use this parameter, it raises a TypeError indicating an unexpected keyword argument.

2. Cause Analysis:
The issue appears to be a mismatch between the documentation and implementation. The documentation mentions that cv_values_ attribute is available when store_cv_values=True, but the actual implementation of RidgeClassifierCV does not include this parameter in its __init__ method. This suggests either:
- The parameter was documented but never implemented
- The parameter was removed but the documentation wasn't updated
- The parameter exists in a related class (like RidgeCV) but wasn't properly inherited or implemented in RidgeClassifierCV

3. Examining Files:

sklearn/exceptions.py:
```
This file contains no relevant functions/classes.
```

sklearn/linear_model/ridge.py:
```
sklearn/linear_model/ridge.py
class: RidgeCV
class: RidgeClassifierCV
class: _BaseRidgeCV
```
These classes are directly relevant because:
- RidgeClassifierCV is the class with the reported issue
- RidgeCV is a related class that might have the store_cv_values functionality
- _BaseRidgeCV is the base class that both inherit from, which might be where the parameter should be handled

sklearn/utils/validation.py:
```
This file contains no relevant functions/classes.
```

The issue appears to be primarily in the ridge.py file, specifically in how RidgeClassifierCV is implemented in relation to its base classes. The parameter store_cv_values is likely implemented in RidgeCV but not properly carried through to RidgeClassifierCV, despite the documentation suggesting it should be available.
