Let me analyze this step by step:

1. Wrong Behavior:
The `--recursive=y` option in pylint is ignoring the `ignore-paths` configuration specified in pyproject.toml. Specifically, files under "src/gen/" are being linted despite being listed in the ignore-paths configuration.

2. Cause Analysis:
The issue appears to be in how pylint handles the recursive file discovery when combined with ignore-paths configuration. When the recursive option is enabled, it seems to bypass the path filtering mechanism that should respect the ignore-paths setting. This suggests there's likely an issue in either:
- The file discovery/walking logic
- The ignore path pattern matching implementation
- The interaction between recursive mode and ignore path filtering

3. Examining Relevant Files:

pylint/interfaces.py:
```
This file contains no relevant functions/classes.
```

pylint/typing.py:
```
pylint/typing.py
class: FileItem
```

pylint/checkers/imports.py:
```
This file contains no relevant functions/classes.
```

pylint/checkers/misc.py:
```
This file contains no relevant functions/classes.
```

pylint/lint/pylinter.py:
```
pylint/lint/pylinter.py
class: PyLinter
```

The most relevant components appear to be:
- FileItem class which defines the structure for file information including paths
- PyLinter class which is responsible for the core linting process including file discovery and filtering

The issue is likely in how PyLinter processes the recursive file discovery while applying ignore-paths patterns, but the actual implementation of this specific functionality might be in another file not shown in the provided information.
