Let me analyze this step by step:

1. Wrong Behavior:
The development server fails to restart automatically when files are changed after adding BASE_DIR to TEMPLATES[0]['DIRS'] in settings.py. This affects not just changes to settings.py but all file changes that should normally trigger a server restart.

2. Cause Analysis:
The issue appears to be related to the auto-reloader's file watching mechanism. When BASE_DIR is added to TEMPLATES[0]['DIRS'], it likely causes the reloader to watch the entire project directory structure, which may be causing issues with the file watching system. This could be overwhelming the reloader or creating circular dependencies in the file watching logic.

3. Relevant Files/Functions Analysis:

```
django/core/management/commands/runserver.py
class: Command
```
This class is relevant as it's responsible for starting the development server and initializing the auto-reloader.

```
django/utils/autoreload.py
class: BaseReloader
class: StatReloader
class: WatchmanReloader
function: run_with_reloader
```
These components are directly responsible for the auto-reloading functionality and file watching mechanism. The issue likely stems from how these handle directory watching, especially when BASE_DIR is added to the watched paths.

```
django/template/utils.py
class: EngineHandler
```
This class is relevant as it handles template engine configuration and directory management, which is directly related to the TEMPLATES setting that triggers the issue.

For the remaining files:
- django/template/autoreload.py
- django/template/backends/django.py

These files contain no relevant functions/classes.

The core issue likely lies in the interaction between the template engine configuration and the auto-reloader's file watching mechanism, particularly in how the reloader handles large directory trees when BASE_DIR is added to the template directories.
