Let me analyze this step by step:

1. Wrong Behavior:
The `pytest --fixtures` command does not display the scope of fixtures when listing them. Users have to look at the documentation or source code to determine a fixture's scope.

2. Cause Analysis:
The issue stems from the fixture display functionality not including the scope information in its output. This would likely be handled in the code that generates the fixture listing output when the `--fixtures` flag is used.

3. Examining Files for Relevant Functions/Classes:

testing/python/fixtures.py:
```
class TestShowFixtures
```
This class is directly relevant as it handles the testing of fixture display functionality, including how fixtures are shown with the --fixtures command.

testing/python/metafunc.py:
```
class DummyFixtureDef
```
This class is relevant as it contains fixture definition information including scope, which would be needed for displaying fixture scopes.

All other files and classes appear to be focused on other aspects of fixture functionality (like parametrization, ordering, error handling, etc.) rather than the display of fixture information. While they contain fixture-related code, they don't directly relate to how fixture information is displayed to users.

The key functionality for implementing this feature would likely need to be added to the TestShowFixtures class, which handles the fixture display functionality, and potentially utilize the scope information available in DummyFixtureDef.

For the remaining files in the list:
```
This file contains no relevant functions/classes.
```
