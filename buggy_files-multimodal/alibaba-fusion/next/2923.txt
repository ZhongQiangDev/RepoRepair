Let me analyze this step by step:

1. Wrong Behavior:
- In SSR (Server-Side Rendering) scenarios, ConfigProvider's internal cache experiences memory growth that cannot be garbage collected
- This leads to memory leaks during stress testing

2. Cause Analysis:
- The issue stems from ConfigProvider's cache cleanup mechanism relying on React's `componentWillUnmount` lifecycle method
- However, in SSR environments, `componentWillUnmount` is not executed as noted in React issue #3714
- This means the cache removal code in ConfigProvider is never triggered during SSR, causing memory to accumulate

3. Most Related Files:
Based on the repository information, these are the most relevant files ordered by importance:

```
src/config-provider/index.jsx
src/config-provider/cache.js
types/config-provider/index.d.ts
scripts/server/middlewares/rebuild-scss.js
scripts/server/middlewares/get-variables.js
```

The first two files are most critical as they contain the actual ConfigProvider implementation and cache management. The types file provides insight into the component's structure. The server middleware files are relevant as they handle SSR-related functionality but are less directly connected to the core issue.
