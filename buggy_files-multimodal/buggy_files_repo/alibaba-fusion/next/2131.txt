Let me analyze this step by step:

1. Wrong Behavior:
From the GitHub issue description and images, it appears that a key property is being incorrectly added to immutable data in a Tree component. The issue is reported to work normally in version 1.19.x but shows abnormal behavior in version 1.20.23.

2. Cause Analysis:
The problem seems to be related to how the Tree component handles data transformation and key generation for tree nodes. The key property is being added to data that should remain immutable, which violates immutability principles and could cause unexpected behavior or rendering issues.

3. Most Related Files:
Based on the repository information provided, here are the most relevant files ordered by importance:

```
src/tree/view/tree.jsx
src/tree/view/tree-node.jsx
types/tree/index.d.ts
src/tree/index.jsx
src/tree/utils.js
```

These files are most relevant because:
- `tree.jsx` contains the core Tree component logic and data handling
- `tree-node.jsx` handles individual node rendering and properties
- `types/tree/index.d.ts` defines the TypeScript interfaces that specify how props and data should be handled
- `tree/index.jsx` serves as the main entry point for the Tree component
- `tree/utils.js` likely contains utility functions for data transformation

The issue is most likely originating from how data is processed in these files, particularly in the tree data transformation logic that adds keys to nodes.
