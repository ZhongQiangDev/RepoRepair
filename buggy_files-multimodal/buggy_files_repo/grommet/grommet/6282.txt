I'll analyze the GitHub problem description and identify the files that need to be edited to fix the issue.

## Problem Analysis

1. **Wrong Behavior**: When sorting a column in the DataTable component, if an item has a property set to null or undefined, the sorting doesn't work as expected.

2. **Expected Behavior**: Undefined properties should be treated as empty strings during sorting.

3. **Root Cause**: The sorting logic in the DataTable component doesn't properly handle null or undefined values. When comparing values during sorting, it likely fails to normalize these values, causing unexpected sorting behavior.

Looking at the repository information, I need to find the files responsible for sorting in the DataTable component.

## Files That Need Editing

The most relevant files for fixing this issue are:

```
src/js/components/DataTable/buildState.js
src/js/components/DataTable/DataTable.js
src/js/components/DataTable/Sorter.js
src/js/components/DataTable/Body.js
src/js/components/DataTable/Header.js
```

The primary issue is likely in `buildState.js` which contains the `sortCompare` function and other sorting-related utilities. This file has functions for filtering and sorting data, which is where the null/undefined handling needs to be fixed.

The `DataTable.js` file contains the main component logic and would be involved in managing the sort state and triggering the sorting operations.

`Sorter.js` handles the UI for sorting columns, while `Body.js` and `Header.js` would be involved in rendering the sorted data and handling sort events.

The fix would likely involve modifying the sorting comparison function to treat null or undefined values as empty strings before comparison.
