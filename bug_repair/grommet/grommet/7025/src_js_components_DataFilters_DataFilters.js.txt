The issue is that the 'Clear Filters' button is not appearing when the user interacts with the Data Toolbar components. The problem seems to be related to the condition that determines whether the `clearControl` should be rendered. Specifically, the `badge` variable, which is used to determine if the `clearControl` should be shown, is not being updated correctly when the user interacts with the Data Toolbar components.

To fix this, we need to ensure that the `badge` variable is updated whenever the user interacts with the Data Toolbar components. This can be achieved by updating the `touched` state whenever the user interacts with the Data Toolbar components.

Here is the *SEARCH/REPLACE* edit to fix the issue:

```javascript
### src/js/components/DataFilters/DataFilters.js
<<<<<<< SEARCH
  const [touched, setTouched] = useState({});
  const controlled = useMemo(() => drop || layer, [drop, layer]);
  // generate the badge value based on touched fields that have a value
  const badge = useMemo(
    () =>
      (controlled && Object.keys(touched).filter((k) => touched[k]).length) ||
      undefined,
    [controlled, touched],
  );
=======
  const [touched, setTouched] = useState({});
  const controlled = useMemo(() => drop || layer, [drop, layer]);
  // generate the badge value based on touched fields that have a value
  const badge = useMemo(
    () => Object.keys(touched).filter((k) => touched[k]).length || undefined,
    [touched],
  );
>>>>>>> REPLACE
```

This change ensures that the `badge` variable is updated whenever the `touched` state is updated, which should resolve the issue of the 'Clear Filters' button not appearing when the user interacts with the Data Toolbar components.
