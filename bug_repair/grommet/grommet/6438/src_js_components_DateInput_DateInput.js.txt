To address the issue where it's possible to select the last month's day outside the `DateInput` calendarProps bounds, we need to ensure that the `Calendar` component correctly handles the bounds and disables the selection of dates outside these bounds.

The issue seems to be related to the `Calendar` component's `onSelect` function not properly checking the bounds before allowing a date selection. We need to add a check to ensure that the selected date falls within the specified bounds.

Here's the proposed fix:

```javascript
### src/js/components/DateInput/DateInput.js
<<<<<<< SEARCH
        onSelect={
          disabled
            ? undefined
            : (nextValue) => {
                let normalizedValue;
                if (range && Array.isArray(nextValue))
                  [normalizedValue] = nextValue;
                // clicking an edge date removes it
                else if (range) normalizedValue = [nextValue, nextValue];
                else normalizedValue = nextValue;

                if (schema) setTextValue(valueToText(normalizedValue, schema));
                setValue(normalizedValue);
                setReference(getReference(nextValue));
                if (onChange) onChange({ value: normalizedValue });
                if (open && !range) {
                  closeCalendar();
                  setTimeout(() => ref.current.focus(), 1);
                }
              }
        }
=======
        onSelect={
          disabled
            ? undefined
            : (nextValue) => {
                let normalizedValue;
                if (range && Array.isArray(nextValue))
                  [normalizedValue] = nextValue;
                // clicking an edge date removes it
                else if (range) normalizedValue = [nextValue, nextValue];
                else normalizedValue = nextValue;

                // Check if the selected date is within the bounds
                const { min, max } = calendarProps;
                if (min && normalizedValue < min || max && normalizedValue > max) {
                  return; // Do not proceed if the date is outside the bounds
                }

                if (schema) setTextValue(valueToText(normalizedValue, schema));
                setValue(normalizedValue);
                setReference(getReference(nextValue));
                if (onChange) onChange({ value: normalizedValue });
                if (open && !range) {
                  closeCalendar();
                  setTimeout(() => ref.current.focus(), 1);
                }
              }
        }
>>>>>>> REPLACE
```

This fix adds a check to ensure that the selected date (`normalizedValue`) is within the specified `min` and `max` bounds defined in `calendarProps`. If the selected date is outside these bounds, the function returns early, preventing the selection.
