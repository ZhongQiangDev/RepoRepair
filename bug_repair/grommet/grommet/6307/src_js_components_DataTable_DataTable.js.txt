The issue described is that the sorting arrow icons in the DataTable header do not update when navigating back and forth using the browser's navigation buttons, even though the URL changes. This suggests that the component is not re-rendering or updating its state based on changes in the URL.

To fix this, we need to listen for changes in the URL and update the `sort` state accordingly. We can use the `useEffect` hook along with the `window.history` API to detect URL changes and update the `sort` state.

Here's the proposed fix:

```javascript
### src/js/components/DataTable/DataTable.js
<<<<<<< SEARCH
  const [sort, setSort] = useState(sortProp || {});
=======
  const [sort, setSort] = useState(sortProp || {});

  useEffect(() => {
    const handlePopState = () => {
      const urlParams = new URLSearchParams(window.location.search);
      const property = urlParams.get('property');
      const direction = urlParams.get('direction');
      if (property && direction) {
        setSort({ property, direction });
      }
    };

    window.addEventListener('popstate', handlePopState);

    return () => {
      window.removeEventListener('popstate', handlePopState);
    };
  }, [setSort]);
>>>>>>> REPLACE
```

This code adds a `useEffect` hook that listens for the `popstate` event, which is triggered when the browser's history changes (e.g., when using the back/forward buttons). When this event is detected, it reads the `property` and `direction` parameters from the URL and updates the `sort` state accordingly. This should ensure that the sorting arrow icons in the header are updated when navigating back and forth using the browser's navigation buttons.
