The issue described is related to the background color anomaly when using virtual scrolling in the `CascaderSelect` component. The image shows that the background color of the selected item is not displayed correctly. This might be due to the virtual list not properly rendering the background styles for the selected items.

To address this, we need to ensure that the virtual list correctly applies the background styles for the selected items. This can be achieved by ensuring that the `VirtualList` component correctly handles the rendering of the selected items and their styles.

Here is the proposed fix:

```typescript
###components/cascader/menu.tsx
<<<<<<< SEARCH
                {useVirtual ? (
                    <VirtualList
                        ref={this.saveVirtualRef}
                        itemsRenderer={(items, ref) => this.renderMenu(items, ref, menuProps)}
                    >
                        {children}
                    </VirtualList>
                ) : (
                    this.renderMenu(children as ReactNodeArray, undefined, menuProps)
                )}
=======
                {useVirtual ? (
                    <VirtualList
                        ref={this.saveVirtualRef}
                        itemsRenderer={(items, ref) => this.renderMenu(items, ref, menuProps)}
                        itemStyle={(index) => {
                            const item = children[index];
                            if (item && (item.props.checked || item.props.selected || item.props.expanded)) {
                                return { backgroundColor: 'your-selected-background-color' };
                            }
                            return {};
                        }}
                    >
                        {children}
                    </VirtualList>
                ) : (
                    this.renderMenu(children as ReactNodeArray, undefined, menuProps)
                )}
>>>>>>> REPLACE
```

Explanation:
- The `itemStyle` prop is added to the `VirtualList` component. This prop allows us to dynamically set the style for each item based on its index.
- Inside the `itemStyle` function, we check if the current item is selected, checked, or expanded. If it is, we set the background color to the desired selected background color.
- This ensures that the virtual list correctly applies the background styles for the selected items, fixing the background color anomaly.
