The issue described is that the `onChange` event is being triggered twice when an `id` attribute is added to the `Rating` component. This is likely due to the `handleClick` method being called twice, possibly because of the `setTimeout` used to reset the `clicked` state.

To fix this, we can remove the `setTimeout` and directly update the `clicked` state within the `handleClick` method. Here's the proposed fix:

```javascript
### src/rating/rating.jsx
<<<<<<< SEARCH
        this.props.onChange(isReset ? 0 : newValue);
        setTimeout(() => {
            this.setState({ clicked: false });
        }, 100);
        this.setState({
            cleanedValue: isReset ? newValue : null,
        });
=======
        this.props.onChange(isReset ? 0 : newValue);
        this.setState({
            clicked: false,
            cleanedValue: isReset ? newValue : null,
        });
>>>>>>> REPLACE
```

This change will ensure that the `clicked` state is updated immediately after the `onChange` event is triggered, preventing the `handleClick` method from being called twice.
