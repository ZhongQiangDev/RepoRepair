The issue is related to the `onBlur` event type in the `TextAreaProps` and `InputProps` interfaces. The current type definition for `onBlur` is `() => void`, but the actual implementation expects a function that takes a `MouseEvent` as an argument.

To fix this, we need to update the `onBlur` type definition to accept a `MouseEvent` parameter.

Here is the required *SEARCH/REPLACE* edit:

```typescript
### types/input/index.d.ts
<<<<<<< SEARCH
    /**
     * 失去焦点时候触发的回调
     */
    onBlur?: () => void;
=======
    /**
     * 失去焦点时候触发的回调
     */
    onBlur?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;
>>>>>>> REPLACE
```

And similarly for the `InputProps` interface:

```typescript
### types/input/index.d.ts
<<<<<<< SEARCH
    /**
     * 失去焦点时候触发的回调
     */
    onBlur?: () => void;
=======
    /**
     * 失去焦点时候触发的回调
     */
    onBlur?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;
>>>>>>> REPLACE
```

These changes will ensure that the `onBlur` event handler can accept a `MouseEvent` parameter, resolving the type incompatibility issue.
