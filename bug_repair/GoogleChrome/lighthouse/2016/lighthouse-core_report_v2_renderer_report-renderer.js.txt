The issue is that when there are 0 passing audits, the details dropdown should not be shown. The current code always creates a `<details>` element for passed audits, even if there are none. To fix this, we need to check if there are any passed audits before creating the `<details>` element.

Here's the *SEARCH/REPLACE* edit to fix the issue:

```javascript
###lighthouse-core/report/v2/renderer/report-renderer.js
<<<<<<< SEARCH
    const passedElem = this._dom.createElement('details', 'lh-passed-audits');
    const passedSummary = this._dom.createElement('summary', 'lh-passed-audits-summary');
    passedSummary.textContent = `View ${passedAudits.length} passed items`;
    passedElem.appendChild(passedSummary);

    for (const audit of passedAudits) {
      passedElem.appendChild(this._renderAudit(audit));
    }
    element.appendChild(passedElem);
=======
    if (passedAudits.length > 0) {
      const passedElem = this._dom.createElement('details', 'lh-passed-audits');
      const passedSummary = this._dom.createElement('summary', 'lh-passed-audits-summary');
      passedSummary.textContent = `View ${passedAudits.length} passed items`;
      passedElem.appendChild(passedSummary);

      for (const audit of passedAudits) {
        passedElem.appendChild(this._renderAudit(audit));
      }
      element.appendChild(passedElem);
    }
>>>>>>> REPLACE
```

This edit checks if `passedAudits.length` is greater than 0 before creating and appending the `<details>` element. If there are no passed audits, the `<details>` element will not be created or appended, thus fixing the issue.
