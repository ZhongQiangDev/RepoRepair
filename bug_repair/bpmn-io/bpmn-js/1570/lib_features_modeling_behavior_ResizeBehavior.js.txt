The issue described is that the diagram jumps when wrapping a process in a pool. This behavior is likely due to the way the diagram is being resized or repositioned during the wrapping process. The `ResizeBehavior` function in the provided code is responsible for setting minimum bounds and resize constraints, but it doesn't directly handle the wrapping process.

To address the issue, we need to ensure that the diagram remains in the current viewport when wrapping a process in a pool. This can be achieved by adjusting the viewport or scroll position after the wrapping process.

Here's a potential fix:

```javascript
### lib/features/modeling/behavior/ResizeBehavior.js
<<<<<<< SEARCH
export default function ResizeBehavior(eventBus) {
  eventBus.on('resize.start', HIGH_PRIORITY, function(event) {
    var context = event.context,
        shape = context.shape,
        direction = context.direction,
        balanced = context.balanced;

    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {
      context.resizeConstraints = getParticipantResizeConstraints(shape, direction, balanced);
    }

    if (is(shape, 'bpmn:Participant')) {
      context.minDimensions = PARTICIPANT_MIN_DIMENSIONS;
    }

    if (is(shape, 'bpmn:SubProcess') && isExpanded(shape)) {
      context.minDimensions = SUB_PROCESS_MIN_DIMENSIONS;
    }

    if (is(shape, 'bpmn:TextAnnotation')) {
      context.minDimensions = TEXT_ANNOTATION_MIN_DIMENSIONS;
    }
  });
}
=======
export default function ResizeBehavior(eventBus) {
  eventBus.on('resize.start', HIGH_PRIORITY, function(event) {
    var context = event.context,
        shape = context.shape,
        direction = context.direction,
        balanced = context.balanced;

    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {
      context.resizeConstraints = getParticipantResizeConstraints(shape, direction, balanced);
    }

    if (is(shape, 'bpmn:Participant')) {
      context.minDimensions = PARTICIPANT_MIN_DIMENSIONS;
    }

    if (is(shape, 'bpmn:SubProcess') && isExpanded(shape)) {
      context.minDimensions = SUB_PROCESS_MIN_DIMENSIONS;
    }

    if (is(shape, 'bpmn:TextAnnotation')) {
      context.minDimensions = TEXT_ANNOTATION_MIN_DIMENSIONS;
    }

    // Add code to handle wrapping process and keep the diagram in the current viewport
    eventBus.on('wrap.end', function(wrapEvent) {
      var canvas = eventBus._canvas;
      var currentViewbox = canvas.viewbox();
      canvas.zoom(currentViewbox.scale, currentViewbox.x, currentViewbox.y);
    });
  });
}
>>>>>>> REPLACE
```

This fix adds an event listener for the `wrap.end` event, which adjusts the canvas viewbox to keep the diagram in the current viewport after the wrapping process. This should prevent the diagram from jumping.
