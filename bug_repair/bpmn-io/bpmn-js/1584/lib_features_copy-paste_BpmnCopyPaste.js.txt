The issue described involves inconsistent behavior when adding, undoing, and redoing the addition of a participant in a BPMN model, as well as duplicate IDs when copying a pool. The code provided is related to the copy-paste functionality, which is relevant to the second issue.

To address the duplicate ID issue when copying a pool, we need to ensure that the `id` property is properly handled during the copy process. The current code does not explicitly handle the `id` property during the copy operation, which can lead to duplicate IDs.

Here's the proposed fix:

```javascript
### lib/features/copy-paste/BpmnCopyPaste.js
<<<<<<< SEARCH
    newBusinessObject = bpmnFactory.create(oldBusinessObject.$type);

    descriptor.businessObject = moddleCopy.copyElement(
      oldBusinessObject,
      newBusinessObject
    );
=======
    newBusinessObject = bpmnFactory.create(oldBusinessObject.$type, { id: bpmnFactory.nextId() });

    descriptor.businessObject = moddleCopy.copyElement(
      oldBusinessObject,
      newBusinessObject
    );

    // Ensure the new business object gets a unique ID
    newBusinessObject.id = bpmnFactory.nextId();
>>>>>>> REPLACE
```

This change ensures that when a new business object is created during the copy process, it is assigned a unique ID using `bpmnFactory.nextId()`. This should prevent the duplicate ID issue when copying pools.

For the first issue regarding the inconsistent redo behavior, the code provided does not directly address the undo/redo functionality. This issue might be related to how the undo/redo stack is managed within the BPMN model. To address this, we would need to look into the undo/redo implementation and ensure that the process ID is consistently managed across these operations. However, the provided code does not contain the relevant parts for this issue.
