To address the issues described in the bug report, we need to ensure that the process ID remains consistent when adding, removing, and re-adding participants. Additionally, we need to handle the duplicate Pool ID issue when copying and pasting Pools.

### Fix for Inconsistent Redo Behaviour

The issue seems to be related to how the process ID is managed when participants are added and removed. We need to ensure that the process ID is preserved during these operations.

### Fix for Duplicate Pool ID

When copying and pasting Pools, we need to ensure that each Pool gets a unique ID to avoid conflicts.

Here are the proposed changes:

```javascript
### lib/BaseModeler.js
<<<<<<< SEARCH
/**
 * Create a moddle instance, attaching ids to it.
 *
 * @param {Object} options
 */
=======
/**
 * Create a moddle instance, attaching ids to it.
 * Ensure process ID consistency and unique Pool IDs.
 *
 * @param {Object} options
 */
createModdleInstance(options) {
  const moddle = new Moddle(options.moddleExtensions);

  const ids = new Ids();

  // Ensure process ID consistency
  let processId = 'Process_1';

  moddle.create = function(type, attrs) {
    if (type === 'bpmn:Process') {
      if (!attrs.id) {
        attrs.id = processId;
      }
    } else if (type === 'bpmn:Participant') {
      if (!attrs.id) {
        attrs.id = ids.nextId('Participant');
      }
    }

    return moddle.create(type, attrs);
  };

  return moddle;
}
>>>>>>> REPLACE
```

```javascript
### lib/BaseModeler.js
<<<<<<< SEARCH
/**
 * Collect ids processed during parsing of the
 * definitions object.
 *
 * @param {ModdleElement} definitions
 * @param {Context} context
 */
=======
/**
 * Collect ids processed during parsing of the
 * definitions object. Ensure unique Pool IDs.
 *
 * @param {ModdleElement} definitions
 * @param {Context} context
 */
collectIds(definitions, context) {
  const ids = new Ids();

  definitions.rootElements.forEach(element => {
    if (element.$type === 'bpmn:Participant') {
      ids.add(element.id);
    }
  });

  context.ids = ids;
}
>>>>>>> REPLACE
```

These changes should help in maintaining the consistency of the process ID and ensuring unique Pool IDs when copying and pasting.
