The issue described is that when an Intermediate Event is copied and pasted as a Boundary Event, its properties are lost. This suggests that the properties are not being correctly copied over during the paste operation.

To fix this, we need to ensure that the properties of the Intermediate Event are preserved when it is pasted as a Boundary Event. This likely involves modifying the `copyProperties` function or the logic that handles the paste operation.

Here's a potential fix:

```javascript
###lib/features/copy-paste/BpmnCopyPaste.js
<<<<<<< SEARCH
    newBusinessObject = bpmnFactory.create(oldBusinessObject.$type);

    descriptor.businessObject = moddleCopy.copyElement(
      oldBusinessObject,
      newBusinessObject
    );

    // resolve references e.g. default sequence flow
    resolveReferences(descriptor, cache);

    copyProperties(descriptor, newBusinessObject, [
      'isExpanded',
      'name'
    ]);

    removeProperties(descriptor, 'oldBusinessObject');
=======
    newBusinessObject = bpmnFactory.create(oldBusinessObject.$type);

    descriptor.businessObject = moddleCopy.copyElement(
      oldBusinessObject,
      newBusinessObject
    );

    // resolve references e.g. default sequence flow
    resolveReferences(descriptor, cache);

    // Copy all properties from the old business object to the new one
    copyProperties(oldBusinessObject, newBusinessObject, Object.keys(oldBusinessObject));

    copyProperties(descriptor, newBusinessObject, [
      'isExpanded',
      'name'
    ]);

    removeProperties(descriptor, 'oldBusinessObject');
>>>>>>> REPLACE
```

This change ensures that all properties from the old business object are copied to the new one, which should preserve the properties when pasting as a Boundary Event.
