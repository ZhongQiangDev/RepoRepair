The issue described is that the append shortcut `a` does not work on elements where append actions are allowed in principle but no append actions are given. The current implementation checks if `contextPad` and `selection` are available before registering the `appendElement` action. However, it does not handle the case where append actions are allowed but not explicitly provided.

To fix this, we need to ensure that the `appendElement` action is registered even if there are no append actions available in the `contextPad`. We can achieve this by modifying the `registerActions` method to always register the `appendElement` action and handle the case where no append actions are available.

Here is the proposed fix:

```javascript
###lib/features/create-append-anything/CreateAppendEditorActions.js
<<<<<<< SEARCH
  // append
  if (selection && contextPad) {
    assign(actions, {
      'appendElement': function(event) {
        contextPad.triggerEntry('append', 'click', event);
      } }
    );
  }
=======
  // append
  assign(actions, {
    'appendElement': function(event) {
      if (contextPad && selection) {
        contextPad.triggerEntry('append', 'click', event);
      } else {
        // Handle the case where append actions are allowed but not explicitly provided
        // For example, trigger a default append action or create action
        palette.triggerEntry('create', 'click', event);
      }
    }
  });
>>>>>>> REPLACE
```
