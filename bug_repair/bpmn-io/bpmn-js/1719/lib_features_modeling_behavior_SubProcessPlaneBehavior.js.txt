The issue described is related to the visibility of labels inside a collapsed sub-process. The labels should be hidden when the sub-process is collapsed. The `_showRecursively` function seems to handle the visibility of elements, but it might not be correctly setting the `hidden` property for labels when the sub-process is collapsed.

To fix this, we need to ensure that all labels inside the sub-process are hidden when the sub-process is collapsed. We can achieve this by modifying the `_showRecursively` function to specifically handle labels.

Here is the proposed fix:

```javascript
###lib/features/modeling/behavior/SubProcessPlaneBehavior.js
<<<<<<< SEARCH
/**
 * Sets `hidden` property on all children of the given shape.
 *
 * @param {Array} elements
 * @param {Boolean} [hidden]
 * @returns {Array} all child elements
 */
SubProcessPlaneBehavior.prototype._showRecursively = function(elements, hidden) {
  var self = this;

  var result = [];
  elements.forEach(function(element) {
    element.hidden = !!hidden;

    result = result.concat(element);

    if (element.children) {
      result = result.concat(
        self._showRecursively(element.children, element.collapsed || hidden)
      );
    }
  });

  return result;
};
=======
/**
 * Sets `hidden` property on all children of the given shape, including labels.
 *
 * @param {Array} elements
 * @param {Boolean} [hidden]
 * @returns {Array} all child elements
 */
SubProcessPlaneBehavior.prototype._showRecursively = function(elements, hidden) {
  var self = this;

  var result = [];
  elements.forEach(function(element) {
    // Hide labels when the sub-process is collapsed
    if (element.type === 'label') {
      element.hidden = element.parent.collapsed || hidden;
    } else {
      element.hidden = !!hidden;
    }

    result = result.concat(element);

    if (element.children) {
      result = result.concat(
        self._showRecursively(element.children, element.collapsed || hidden)
      );
    }
  });

  return result;
};
>>>>>>> REPLACE
```

This modification ensures that labels inside a sub-process are hidden when the sub-process is collapsed, addressing the issue described in the bug report.
