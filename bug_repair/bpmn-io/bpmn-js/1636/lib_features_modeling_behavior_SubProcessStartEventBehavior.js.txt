The issue described is that when a `call activity` is morphed into an expanded `sub-process`, it does not automatically include a start event, unlike when a `task` is morphed into an expanded `sub-process`. The code provided handles the morphing behavior for tasks but not for call activities. To fix this, we need to modify the condition in the `postExecuted` function to include call activities as well.

Here is the required SEARCH/REPLACE edit:

```javascript
### lib/features/modeling/behavior/SubProcessStartEventBehavior.js
<<<<<<< SEARCH
    if (
      !is(newShape, 'bpmn:SubProcess') ||
      !is(oldShape, 'bpmn:Task') ||
      !isExpanded(newShape)
    ) {
=======
    if (
      !is(newShape, 'bpmn:SubProcess') ||
      (!is(oldShape, 'bpmn:Task') && !is(oldShape, 'bpmn:CallActivity')) ||
      !isExpanded(newShape)
    ) {
>>>>>>> REPLACE
```

This change ensures that the start event is added when morphing both tasks and call activities into expanded sub-processes.
