The issue described is that when morphing a `call activity` to an expanded `sub-process`, the resulting subprocess does not include a start event, which is inconsistent with the behavior when morphing from a task. To fix this, we need to ensure that when a call activity is morphed into an expanded subprocess, a start event is added.

Here's the proposed fix:

```javascript
### lib/features/replace/BpmnReplace.js
<<<<<<< SEARCH
    if (is(oldBusinessObject, 'bpmn:Activity')) {

      if (isSubProcess(oldBusinessObject)) {

        // no toggeling, so keep old state
        newElement.isExpanded = isExpanded(element);
      }

      // else if property is explicitly set, use it
      else if (target && has(target, 'isExpanded')) {
        newElement.isExpanded = target.isExpanded;
      }

      // TODO: need also to respect min/max Size
      // copy size, from an expanded subprocess to an expanded alternative subprocess
      // except bpmn:Task, because Task is always expanded
      if ((isExpanded(element) && !is(oldBusinessObject, 'bpmn:Task')) && newElement.isExpanded) {
        newElement.width = element.width;
        newElement.height = element.height;
      }
    }
=======
    if (is(oldBusinessObject, 'bpmn:Activity')) {

      if (isSubProcess(oldBusinessObject)) {

        // no toggeling, so keep old state
        newElement.isExpanded = isExpanded(element);
        
        // Add a start event if the new element is an expanded subprocess
        if (newElement.isExpanded && is(newBusinessObject, 'bpmn:SubProcess')) {
          const startEvent = bpmnFactory.create('bpmn:StartEvent');
          newBusinessObject.flowElements.push(startEvent);
          const startEventDi = bpmnFactory.create('bpmndi:BPMNShape', {
            bpmnElement: startEvent,
            isExpanded: false
          });
          newElement.di.flowElements.push(startEventDi);
        }
      }

      // else if property is explicitly set, use it
      else if (target && has(target, 'isExpanded')) {
        newElement.isExpanded = target.isExpanded;
      }

      // TODO: need also to respect min/max Size
      // copy size, from an expanded subprocess to an expanded alternative subprocess
      // except bpmn:Task, because Task is always expanded
      if ((isExpanded(element) && !is(oldBusinessObject, 'bpmn:Task')) && newElement.isExpanded) {
        newElement.width = element.width;
        newElement.height = element.height;
      }
    }
>>>>>>> REPLACE
```

This change ensures that when a call activity is morphed into an expanded subprocess, a start event is added to the subprocess, matching the expected behavior.
