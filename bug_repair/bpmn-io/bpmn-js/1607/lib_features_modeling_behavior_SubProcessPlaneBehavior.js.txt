The issue described is related to creating groups inside collapsed sub-processes and then exporting the BPMN diagram, which results in an "unresolved reference" warning upon re-import. This suggests that the group's reference is not being properly handled during the export or import process.

To address this, we need to ensure that when a group is created inside a collapsed sub-process, its reference is correctly maintained and exported. The `SubProcessPlaneBehavior` class is responsible for handling the creation and manipulation of sub-processes and their associated planes. We need to add logic to handle groups within collapsed sub-processes.

Here's the proposed fix:

```javascript
###lib/features/modeling/behavior/SubProcessPlaneBehavior.js
<<<<<<< SEARCH
  this.postExecuted('shape.create', function(context) {
    var shape = context.shape,
        rootElement = context.newRootElement;

    if (!rootElement || !shape.children) {
      return;
    }

    self._showRecursively(shape.children);

    self._moveChildrenToShape(shape, rootElement);
  }, true);
=======
  this.postExecuted('shape.create', function(context) {
    var shape = context.shape,
        rootElement = context.newRootElement;

    if (!rootElement || !shape.children) {
      return;
    }

    // Ensure groups within collapsed sub-processes are handled correctly
    if (is(shape, 'bpmn:Group')) {
      var groupBusinessObject = getBusinessObject(shape);
      var groupPlane = self._addDiagram(groupBusinessObject);
      context.newRootElement = canvas.addRootElement(groupPlane);
    }

    self._showRecursively(shape.children);

    self._moveChildrenToShape(shape, rootElement);
  }, true);
>>>>>>> REPLACE
```

This edit adds a check to see if the shape being created is a `bpmn:Group`. If it is, it ensures that the group's business object is added to the diagram and a root element is created for it. This should help maintain the reference to the group when the BPMN diagram is exported and re-imported.
