The issue described is that when an element is dropped onto a sequence flow, the layout breaks and the docking of the new incoming sequence flow is always at the top left corner. This suggests that the snapping logic for sequence flows might not be correctly calculating the docking position.

The relevant code segment is likely the part where the snapping logic is applied to sequence flows. Specifically, the section where the `snapToPosition` function is called for sequence flows.

Here is the proposed fix:

```javascript
###lib/features/snapping/BpmnConnectSnapping.js
<<<<<<< SEARCH
      if (isAny(target, ['bpmn:Event', 'bpmn:Gateway'])) {
        snapToPosition(event, mid(target));
      }

      if (is(target, 'bpmn:Task')) {
        snapTargetMidOnCenter(event, target);
      }
=======
      if (isAny(target, ['bpmn:Event', 'bpmn:Gateway', 'bpmn:SequenceFlow'])) {
        snapToPosition(event, mid(target));
      }

      if (is(target, 'bpmn:Task')) {
        snapTargetMidOnCenter(event, target);
      }
>>>>>>> REPLACE
```

This change ensures that the `snapToPosition` function is called for sequence flows as well, which should help in correctly calculating the docking position and fixing the layout issue.
