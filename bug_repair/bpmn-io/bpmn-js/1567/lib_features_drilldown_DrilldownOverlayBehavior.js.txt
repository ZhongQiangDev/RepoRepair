The issue described is related to the drilldown overlay not being aware of root element changes when moving between processes. The error message `Uncaught Error: rootElement required` suggests that the `canvas.setRootElement` method is being called without a valid root element.

To fix this, we need to ensure that the `canvas.setRootElement` method is called with a valid root element. The `canvas.findRoot` method should be used to find the correct root element before setting it.

Here's the proposed fix:

```javascript
### lib/features/drilldown/DrilldownOverlayBehavior.js
<<<<<<< SEARCH
button.addEventListener('click', function() {
  canvas.setRootElement(canvas.findRoot(planeId(element)));
});
=======
button.addEventListener('click', function() {
  var rootElement = canvas.findRoot(planeId(element));
  if (rootElement) {
    canvas.setRootElement(rootElement);
  } else {
    console.error('No valid root element found for:', planeId(element));
  }
});
>>>>>>> REPLACE
```

This change ensures that `canvas.setRootElement` is only called if a valid root element is found, preventing the `Uncaught Error: rootElement required` error. If no valid root element is found, an error message is logged to the console for debugging purposes.
