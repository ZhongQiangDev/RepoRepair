The issue seems to be related to the `canvas.setRootElement` method not being aware of the root element changes when navigating back from a sub-process. The error message "rootElement required" suggests that the `canvas.setRootElement` method is being called with an invalid or undefined root element.

To fix this, we need to ensure that the `canvas.setRootElement` method is called with a valid root element. We can do this by checking if the root element exists before calling the method.

Here's the proposed fix:

```javascript
### lib/features/drilldown/DrilldownBreadcrumbs.js
<<<<<<< SEARCH
      link.addEventListener('click', function() {
        canvas.setRootElement(canvas.findRoot(planeId(el)) || canvas.findRoot(el.id));
      });
=======
      link.addEventListener('click', function() {
        var rootElement = canvas.findRoot(planeId(el)) || canvas.findRoot(el.id);
        if (rootElement) {
          canvas.setRootElement(rootElement);
        } else {
          console.error('Root element not found for:', el);
        }
      });
>>>>>>> REPLACE
```

This change ensures that `canvas.setRootElement` is only called if a valid root element is found. If no valid root element is found, an error message is logged to the console. This should prevent the "rootElement required" error from occurring.
