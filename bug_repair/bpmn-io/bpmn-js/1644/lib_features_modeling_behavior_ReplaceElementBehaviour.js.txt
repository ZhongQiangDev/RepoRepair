The issue described is that multi-instance properties are lost when changing between parallel and sequential multi-instance configurations. This suggests that the properties are not being preserved during the replacement process. The `ReplaceElementBehaviour` class is responsible for replacing elements, so we need to ensure that multi-instance properties are retained during this process.

To fix this, we need to modify the `replaceElements` method to preserve the multi-instance properties when replacing elements.

```javascript
### lib/features/modeling/behavior/ReplaceElementBehaviour.js
<<<<<<< SEARCH
ReplaceElementBehaviour.prototype.replaceElements = function(elements, newElements) {
  var elementRegistry = this._elementRegistry,
      bpmnReplace = this._bpmnReplace,
      selection = this._selection;

  forEach(newElements, function(replacement) {
    var newElement = {
      type: replacement.newElementType
    };

    var oldElement = elementRegistry.get(replacement.oldElementId);

    var idx = elements.indexOf(oldElement);

    elements[idx] = bpmnReplace.replaceElement(oldElement, newElement, { select: false });
  });

  if (newElements) {
    selection.select(elements);
  }
};
=======
ReplaceElementBehaviour.prototype.replaceElements = function(elements, newElements) {
  var elementRegistry = this._elementRegistry,
      bpmnReplace = this._bpmnReplace,
      selection = this._selection;

  forEach(newElements, function(replacement) {
    var newElement = {
      type: replacement.newElementType
    };

    var oldElement = elementRegistry.get(replacement.oldElementId);

    // Preserve multi-instance properties
    if (oldElement.businessObject.loopCharacteristics) {
      newElement.loopCharacteristics = oldElement.businessObject.loopCharacteristics;
    }

    var idx = elements.indexOf(oldElement);

    elements[idx] = bpmnReplace.replaceElement(oldElement, newElement, { select: false });
  });

  if (newElements) {
    selection.select(elements);
  }
};
>>>>>>> REPLACE
```

This modification ensures that the multi-instance properties (`loopCharacteristics`) are copied from the old element to the new element during the replacement process, thus preserving the multi-instance configuration.
