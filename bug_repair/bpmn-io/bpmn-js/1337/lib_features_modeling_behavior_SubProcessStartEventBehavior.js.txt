To address the issue of disallowing typed Start Events inside non-event-based Sub Processes, we need to modify the `SubProcessStartEventBehavior` class to ensure that typed start events are not allowed inside sub-processes. We also need to ensure that when a start event is moved into a sub-process, its type is dropped.

Here are the necessary changes:

1. Add a check to disallow morphing to a typed start event inside a sub-process.
2. Drop the event type when moving a start event into a sub-process.

```javascript
### lib/features/modeling/behavior/SubProcessStartEventBehavior.js
<<<<<<< SEARCH
this.postExecuted('shape.replace', function(event) {
    var oldShape = event.context.oldShape,
        newShape = event.context.newShape;

    if (
      !is(newShape, 'bpmn:SubProcess') ||
      !is(oldShape, 'bpmn:Task') ||
      !isExpanded(newShape)
    ) {
      return;
    }

    var position = getStartEventPosition(newShape);

    modeling.createShape({ type: 'bpmn:StartEvent' }, position, newShape);
  });
=======
this.postExecuted('shape.replace', function(event) {
    var oldShape = event.context.oldShape,
        newShape = event.context.newShape;

    if (
      !is(newShape, 'bpmn:SubProcess') ||
      !is(oldShape, 'bpmn:Task') ||
      !isExpanded(newShape)
    ) {
      return;
    }

    // Check if the new shape is a typed start event and disallow it
    if (is(newShape, 'bpmn:StartEvent') && newShape.eventDefinition) {
      console.error('Typed start events are not allowed inside sub-processes.');
      return;
    }

    var position = getStartEventPosition(newShape);

    // Create an untyped start event
    modeling.createShape({ type: 'bpmn:StartEvent' }, position, newShape);

    // Drop event type when moving start event to sub-process
    if (is(oldShape, 'bpmn:StartEvent') && oldShape.eventDefinition) {
      delete oldShape.eventDefinition;
    }
  });
>>>>>>> REPLACE
```
