The issue is that the reported error range is too broad, including the entire statement/expression instead of just the constant condition itself. To fix this, we need to modify the `reportIfConstant` function to report only the range of the constant condition.

Here's the fix:

```javascript
### lib/rules/no-constant-condition.js
<<<<<<< SEARCH
function reportIfConstant(node) {
    if (node.test && isConstant(node.test, true)) {
        context.report({ node, message: "Unexpected constant condition." });
    }
}
=======
function reportIfConstant(node) {
    if (node.test && isConstant(node.test, true)) {
        context.report({
            node: node.test,
            message: "Unexpected constant condition."
        });
    }
}
>>>>>>> REPLACE
```

This change ensures that the reported error range is limited to the constant condition itself (`true` in the given examples) rather than the entire statement/expression.
