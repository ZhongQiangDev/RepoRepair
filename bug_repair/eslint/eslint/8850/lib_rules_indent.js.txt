```javascript
### lib/rules/indent.js
<<<<<<< SEARCH
function addBinaryOrLogicalExpressionIndent(node) {
    const tokens = getTokensAndComments(node);
    const operator = sourceCode.getFirstTokenBetween(node.left, node.right, token => token.value === node.operator);
    const firstTokenAfterOperator = sourceCode.getTokenAfter(operator);
    const tokensAfterOperator = tokens.slice(lodash.sortedIndexBy(tokens, firstTokenAfterOperator, token => token.range[0]));

    /*
     * For backwards compatibility, don't check BinaryExpression indents, e.g.
     * var foo = bar &&
     *                   baz;
     */

    offsets.ignoreToken(operator);
    offsets.ignoreToken(tokensAfterOperator[0]);
    offsets.setDesiredOffsets(tokensAfterOperator, tokensAfterOperator[0], 1);
}
=======
function addBinaryOrLogicalExpressionIndent(node) {
    const tokens = getTokensAndComments(node);
    const operator = sourceCode.getFirstTokenBetween(node.left, node.right, token => token.value === node.operator);
    const firstTokenAfterOperator = sourceCode.getTokenAfter(operator);
    const tokensAfterOperator = tokens.slice(lodash.sortedIndexBy(tokens, firstTokenAfterOperator, token => token.range[0]));

    /*
     * For backwards compatibility, don't check BinaryExpression indents, e.g.
     * var foo = bar &&
     *                   baz;
     */

    offsets.ignoreToken(operator);
    offsets.ignoreToken(tokensAfterOperator[0]);
    offsets.setDesiredOffsets(tokensAfterOperator, tokensAfterOperator[0], 0); // Changed from 1 to 0 to fix the issue
}
>>>>>>> REPLACE
```
