```javascript
### client/blocks/app-banner/index.jsx
<<<<<<< SEARCH
const { title, copy } = getAppBannerData( translate, currentSection );
=======
const { title, copy } = getAppBannerData( translate, currentSection, this.props.currentRoute );
>>>>>>> REPLACE
```

```javascript
### client/blocks/app-banner/index.jsx
<<<<<<< SEARCH
const mapStateToProps = state => {
	const sectionName = getSectionName( state );
	const isNotesOpen = isNotificationsOpen( state );

	return {
		dismissedUntil: getPreference( state, APP_BANNER_DISMISS_TIMES_PREFERENCE ),
		currentSection: getCurrentSection( sectionName, isNotesOpen ),
		currentRoute: getCurrentRoute( state ),
		fetchingPreferences: isFetchingPreferences( state ),
		siteId: getSelectedSiteId( state ),
	};
};
=======
const mapStateToProps = state => {
	const sectionName = getSectionName( state );
	const isNotesOpen = isNotificationsOpen( state );
	const currentRoute = getCurrentRoute( state );

	return {
		dismissedUntil: getPreference( state, APP_BANNER_DISMISS_TIMES_PREFERENCE ),
		currentSection: getCurrentSection( sectionName, isNotesOpen ),
		currentRoute,
		fetchingPreferences: isFetchingPreferences( state ),
		siteId: getSelectedSiteId( state ),
	};
};
>>>>>>> REPLACE
```

```javascript
### client/blocks/app-banner/utils.js
<<<<<<< SEARCH
export function getCurrentSection( sectionName, isNotesOpen ) {
	if ( isNotesOpen ) {
		return NOTES;
	}

	return sectionName;
}
=======
export function getCurrentSection( sectionName, isNotesOpen, currentRoute ) {
	if ( isNotesOpen ) {
		return NOTES;
	}

	if ( currentRoute.includes( '/activity' ) ) {
		return 'activity';
	}

	return sectionName;
}
>>>>>>> REPLACE
```

```javascript
### client/blocks/app-banner/utils.js
<<<<<<< SEARCH
export function getAppBannerData( translate, currentSection ) {
	switch ( currentSection ) {
		case EDITOR:
			return {
				title: translate( 'Write on the go.' ),
				copy: translate( 'Compose and publish posts from anywhere.' ),
			};
		case NOTES:
			return {
				title: translate( 'Stay in the know.' ),
				copy: translate( 'Get notifications for new comments and followers.' ),
			};
		case READER:
			return {
				title: translate( 'Read on the go.' ),
				copy: translate( 'Discover and follow your favorite blogs.' ),
			};
		case STATS:
			return {
				title: translate( 'Stats at your fingertips.' ),
				copy: translate( 'Add real-time stats to your device\'s notifications or widgets.' ),
			};
		default:
			return {};
	}
}
=======
export function getAppBannerData( translate, currentSection, currentRoute ) {
	switch ( currentSection ) {
		case EDITOR:
			return {
				title: translate( 'Write on the go.' ),
				copy: translate( 'Compose and publish posts from anywhere.' ),
			};
		case NOTES:
			return {
				title: translate( 'Stay in the know.' ),
				copy: translate( 'Get notifications for new comments and followers.' ),
			};
		case READER:
			return {
				title: translate( 'Read on the go.' ),
				copy: translate( 'Discover and follow your favorite blogs.' ),
			};
		case STATS:
			if ( currentRoute.includes( '/activity' ) ) {
				return {
					title: translate( 'Activity at your fingertips.' ),
					copy: translate( 'Stay updated with your site activity.' ),
				};
			}
			return {
				title: translate( 'Stats at your fingertips.' ),
				copy: translate( 'Add real-time stats to your device\'s notifications or widgets.' ),
			};
		default:
			return {};
	}
}
>>>>>>> REPLACE
```
