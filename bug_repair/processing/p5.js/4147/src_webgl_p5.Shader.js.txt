The issue described is related to the vertex color functionality in the WEBGL mode of p5.js. The problem seems to be that the vertex colors are not being applied correctly in version 0.9.0, whereas they work as expected in version 0.8.0. This suggests a change in the shader code or the way vertex colors are handled between these versions.

Given the provided code and the issue description, the problem likely lies in the shader code that handles vertex colors. The `p5.Shader` class is responsible for managing shaders, but the actual shader code is not shown in the provided file. However, we can infer that the issue might be related to how the vertex colors are passed to the shader.

To fix this issue, we need to ensure that the vertex colors are correctly passed to the shader and used in the fragment shader to color the vertices. Here's a potential fix:

1. Ensure that the vertex colors are passed to the shader correctly.
2. Modify the shader code to use the vertex colors.

Since the actual shader code is not provided, we will assume that the issue is related to how the vertex colors are passed to the shader. We can add a check to ensure that the vertex colors are correctly passed and used.

```javascript
### src/webgl/p5.RendererGL.js
<<<<<<< SEARCH
  this._renderer.GL.uniform4f(this._renderer.GL.uniforms.uColor.location, r, g, b, a);
=======
  if (this._renderer.GL.uniforms.uVertexColor) {
    this._renderer.GL.uniform4f(this._renderer.GL.uniforms.uVertexColor.location, r, g, b, a);
  } else {
    this._renderer.GL.uniform4f(this._renderer.GL.uniforms.uColor.location, r, g, b, a);
  }
>>>>>>> REPLACE
```

This change ensures that if the `uVertexColor` uniform is available, it is used to pass the vertex colors to the shader. If it is not available, the default `uColor` uniform is used.

Additionally, we need to ensure that the shader code is correctly using the vertex colors. This would typically be done in the fragment shader, but since the shader code is not provided, we can only make this assumption based on the issue description.

If the issue persists, further investigation into the shader code and how vertex colors are handled in the shader would be necessary.
