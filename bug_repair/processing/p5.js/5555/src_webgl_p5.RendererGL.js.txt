The issue is related to the default value of the `alpha` attribute in the WebGL renderer. The current default value is `true`, which causes unexpected blending behavior when the canvas background color is different from the page background color. The proposed solution is to change the default value of `alpha` to `false`.

Here's the *SEARCH/REPLACE* edit to fix the issue:

```javascript
### src/webgl/p5.RendererGL.js
<<<<<<< SEARCH
    const defaults = {
      alpha: true,
      depth: true,
      stencil: true,
      antialias: applyAA,
      premultipliedAlpha: false,
      preserveDrawingBuffer: true,
      perPixelLighting: true
    };
=======
    const defaults = {
      alpha: false,
      depth: true,
      stencil: true,
      antialias: applyAA,
      premultipliedAlpha: false,
      preserveDrawingBuffer: true,
      perPixelLighting: true
    };
>>>>>>> REPLACE
```
