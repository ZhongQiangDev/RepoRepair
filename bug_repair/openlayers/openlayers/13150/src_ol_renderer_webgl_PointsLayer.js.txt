```javascript
### src/ol/renderer/webgl/PointsLayer.js
<<<<<<< SEARCH
/**
 * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
 * @return {HTMLElement} The rendered element.
 */
renderFrame(frameState) {
    const gl = this.helper.getGL();
    this.preRender(gl, frameState);

    const renderCount = this.indicesBuffer_.getSize();
    this.helper.drawElements(0, renderCount);
    this.helper.finalizeDraw(
        frameState,
        this.dispatchPreComposeEvent,
        this.dispatchPostComposeEvent
    );
    const canvas = this.helper.getCanvas();

    if (this.hitDetectionEnabled_) {
        this.renderHitDetection(frameState);
        this.hitRenderTarget_.clearCachedData();
    }

    this.postRender(gl, frameState);

    return canvas;
}
=======
/**
 * @param {import("../../PluggableMap.js").FrameState} frameState Frame state.
 * @return {HTMLElement} The rendered element.
 */
renderFrame(frameState) {
    const gl = this.helper.getGL();
    this.preRender(gl, frameState);

    const renderCount = this.indicesBuffer_.getSize();
    this.helper.setOpacity(frameState.layer.getOpacity()); // Set the opacity for the layer
    this.helper.drawElements(0, renderCount);
    this.helper.finalizeDraw(
        frameState,
        this.dispatchPreComposeEvent,
        this.dispatchPostComposeEvent
    );
    const canvas = this.helper.getCanvas();

    if (this.hitDetectionEnabled_) {
        this.renderHitDetection(frameState);
        this.hitRenderTarget_.clearCachedData();
    }

    this.postRender(gl, frameState);

    return canvas;
}
>>>>>>> REPLACE
```
