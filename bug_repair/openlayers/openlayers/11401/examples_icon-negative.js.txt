```javascript
###examples/icon-negative.js
<<<<<<< SEARCH
function createStyle(src, img) {
  return new Style({
    image: new Icon({
      anchor: [0.5, 0.96],
      crossOrigin: 'anonymous',
      src: src,
      img: img,
      imgSize: img ? [img.width, img.height] : undefined,
    }),
  });
}
=======
function createStyle(src, img) {
  return new Style({
    image: new Icon({
      anchor: [0.5, 0.96],
      crossOrigin: 'anonymous',
      src: src,
      img: img,
      imgSize: img ? [img.width, img.height] : undefined,
      scale: 1, // Ensure the scale is positive
    }),
  });
}
>>>>>>> REPLACE
```

```javascript
###examples/icon-negative.js
<<<<<<< SEARCH
const select = new Select({});
=======
const select = new Select({
  style: function(feature) {
    const style = feature.get('style');
    if (style) {
      const icon = style.getImage();
      if (icon && icon.getScale() < 0) {
        icon.setScale(-icon.getScale()); // Correct negative scale for hit detection
      }
    }
    return style;
  }
});
>>>>>>> REPLACE
```

```javascript
###examples/icon-negative.js
<<<<<<< SEARCH
map.on('pointermove', function (evt) {
  map.getTargetElement().style.cursor = map.hasFeatureAtPixel(evt.pixel)
    ? 'pointer'
    : '';
});
=======
map.on('pointermove', function (evt) {
  const pixel = evt.pixel;
  const hit = map.forEachFeatureAtPixel(pixel, function(feature, layer) {
    const style = feature.get('style');
    if (style) {
      const icon = style.getImage();
      if (icon && icon.getScale() < 0) {
        // Temporarily set scale to positive for hit detection
        const originalScale = icon.getScale();
        icon.setScale(-originalScale);
        const hitResult = map.hasFeatureAtPixel(pixel);
        icon.setScale(originalScale); // Restore original scale
        return hitResult;
      }
    }
    return true;
  });
  map.getTargetElement().style.cursor = hit ? 'pointer' : '';
});
>>>>>>> REPLACE
```
