The issue described is that character codes (like `&apos;`) are appearing in labels instead of being decoded properly. This suggests that the text content is not being decoded before being used in the label.

To fix this, we need to decode the text content using `decodeURIComponent()` or a similar function before setting it as the label text. The relevant code for handling text content is likely in the `readString` function or similar functions that parse text content from the KML file.

Here's the proposed fix:

```javascript
### src/ol/format/KML.js
<<<<<<< SEARCH
function readString(node) {
  return getAllTextContent(node, false).trim();
}
=======
function readString(node) {
  const textContent = getAllTextContent(node, false).trim();
  return decodeURIComponent(textContent);
}
>>>>>>> REPLACE
```

This change ensures that any encoded characters in the text content are properly decoded before being used in the label.
