```javascript
### src/ol/source/Vector.js
<<<<<<< SEARCH
/**
 * @param {string} featureKey Unique identifier for the feature.
 * @param {FeatureClass} feature The feature.
 * @private
 */
addToIndex_(featureKey, feature) {
    let valid = true;
    if (feature.getId() !== undefined) {
        const id = String(feature.getId());
        if (!(id in this.idIndex_)) {
            this.idIndex_[id] = feature;
        } else if (feature instanceof RenderFeature) {
            const indexedFeature = this.idIndex_[id];
            if (!(indexedFeature instanceof RenderFeature)) {
                valid = false;
            } else {
                if (!Array.isArray(indexedFeature)) {
                    this.idIndex_[id] = [indexedFeature, feature];
                } else {
                    indexedFeature.push(feature);
                }
            }
        } else {
            valid = false;
        }
    }
    if (valid) {
        assert(
            !(featureKey in this.uidIndex_),
            'The passed `feature` was already added to the source'
        );
        this.uidIndex_[featureKey] = feature;
    }
    return valid;
}
=======
/**
 * @param {string} featureKey Unique identifier for the feature.
 * @param {FeatureClass} feature The feature.
 * @private
 */
addToIndex_(featureKey, feature) {
    let valid = true;
    if (feature.getId() !== undefined) {
        const id = String(feature.getId());
        if (!(id in this.idIndex_)) {
            this.idIndex_[id] = feature;
        } else if (feature instanceof RenderFeature) {
            const indexedFeature = this.idIndex_[id];
            if (!(indexedFeature instanceof RenderFeature)) {
                valid = false;
            } else {
                if (!Array.isArray(indexedFeature)) {
                    this.idIndex_[id] = [indexedFeature, feature];
                } else {
                    indexedFeature.push(feature);
                }
            }
        } else {
            valid = false;
        }
    } else {
        // If feature.getId() is undefined, use featureKey as a fallback
        this.idIndex_[featureKey] = feature;
    }
    if (valid) {
        assert(
            !(featureKey in this.uidIndex_),
            'The passed `feature` was already added to the source'
        );
        this.uidIndex_[featureKey] = feature;
    }
    return valid;
}
>>>>>>> REPLACE
```
