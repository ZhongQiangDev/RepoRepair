```javascript
### src/ol/layer/WebGLTile.js
<<<<<<< SEARCH
/**
 * @param {Style} style The layer style.
 * @param {number} [bandCount] The number of bands.
 * @return {ParsedStyle} Shaders and uniforms generated from the style.
 */
=======
/**
 * @param {Style} style The layer style.
 * @param {number} [bandCount] The number of bands.
 * @param {boolean} [blendWithOne=false] Flag to blend with gl.ONE.
 * @return {ParsedStyle} Shaders and uniforms generated from the style.
 */
>>>>>>> REPLACE
```


```javascript
### src/ol/layer/WebGLTile.js
<<<<<<< SEARCH
class WebGLTileLayer extends BaseTileLayer {
  /**
   * @param {Options} opt_options Tile layer options.
   */
  constructor(opt_options) {
    const options = opt_options ? assign({}, opt_options) : {};

    const style = options.style || {};
    delete options.style;

    const cacheSize = options.cacheSize;
    delete options.cacheSize;

    super(options);

    /**
     * @type {Style}
     * @private
     */
    this.style_ = style;

    /**
     * @type {number}
     * @private
     */
    this.cacheSize_ = cacheSize;

    /**
     * @type {Object<string, (string|number)>}
     * @private
     */
    this.styleVariables_ = this.style_.variables || {};
  }
=======
class WebGLTileLayer extends BaseTileLayer {
  /**
   * @param {Options} opt_options Tile layer options.
   */
  constructor(opt_options) {
    const options = opt_options ? assign({}, opt_options) : {};

    const style = options.style || {};
    delete options.style;

    const cacheSize = options.cacheSize;
    delete options.cacheSize;

    const blendWithOne = options.blendWithOne || false;
    delete options.blendWithOne;

    super(options);

    /**
     * @type {Style}
     * @private
     */
    this.style_ = style;

    /**
     * @type {number}
     * @private
     */
    this.cacheSize_ = cacheSize;

    /**
     * @type {boolean}
     * @private
     */
    this.blendWithOne_ = blendWithOne;

    /**
     * @type {Object<string, (string|number)>}
     * @private
     */
    this.styleVariables_ = this.style_.variables || {};
  }

  /**
   * @return {boolean} Whether to blend with gl.ONE.
   */
  getBlendWithOne() {
    return this.blendWithOne_;
  }

  /**
   * @param {boolean} blendWithOne Whether to blend with gl.ONE.
   */
  setBlendWithOne(blendWithOne) {
    this.blendWithOne_ = blendWithOne;
    this.changed();
  }
>>>>>>> REPLACE
```


```javascript
### src/ol/layer/WebGLTile.js
<<<<<<< SEARCH
  createRenderer() {
    const source = this.getSource();
    const parsedStyle = parseStyle(
      this.style_,
      'bandCount' in source ? source.bandCount : 4
    );

    return new WebGLTileLayerRenderer(this, {
      vertexShader: parsedStyle.vertexShader,
      fragmentShader: parsedStyle.fragmentShader,
      uniforms: parsedStyle.uniforms,
      cacheSize: this.cacheSize_,
    });
  }
=======
  createRenderer() {
    const source = this.getSource();
    const parsedStyle = parseStyle(
      this.style_,
      'bandCount' in source ? source.bandCount : 4,
      this.blendWithOne_
    );

    return new WebGLTileLayerRenderer(this, {
      vertexShader: parsedStyle.vertexShader,
      fragmentShader: parsedStyle.fragmentShader,
      uniforms: parsedStyle.uniforms,
      cacheSize: this.cacheSize_,
      blendWithOne: this.blendWithOne_
    });
  }
>>>>>>> REPLACE
```
