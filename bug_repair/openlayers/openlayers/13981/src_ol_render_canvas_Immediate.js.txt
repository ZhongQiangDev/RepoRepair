```javascript
### src/ol/render/canvas/Immediate.js
<<<<<<< SEARCH
      const x = pixelCoordinates[i] + this.textOffsetX_;
      const y = pixelCoordinates[i + 1] + this.textOffsetY_;
      if (
        rotation !== 0 ||
        this.textScale_[0] != 1 ||
        this.textScale_[1] != 1
      ) {
        const localTransform = composeTransform(
          this.tmpLocalTransform_,
          x,
          y,
          1,
          1,
          rotation,
          -x,
          -y
        );
        context.setTransform.apply(context, localTransform);
        context.translate(x, y);
        context.scale(this.textScale_[0], this.textScale_[1]);
        if (this.textStrokeState_) {
          context.strokeText(this.text_, 0, 0);
        }
        if (this.textFillState_) {
          context.fillText(this.text_, 0, 0);
        }
        context.setTransform(1, 0, 0, 1, 0, 0);
      } else {
        if (this.textStrokeState_) {
          context.strokeText(this.text_, x, y);
        }
        if (this.textFillState_) {
          context.fillText(this.text_, x, y);
        }
      }
=======
      const x = pixelCoordinates[i];
      const y = pixelCoordinates[i + 1];
      const offsetX = this.textOffsetX_;
      const offsetY = this.textOffsetY_;
      if (
        rotation !== 0 ||
        this.textScale_[0] != 1 ||
        this.textScale_[1] != 1
      ) {
        const localTransform = composeTransform(
          this.tmpLocalTransform_,
          x + offsetX,
          y + offsetY,
          1,
          1,
          rotation,
          -(x + offsetX),
          -(y + offsetY)
        );
        context.setTransform.apply(context, localTransform);
        context.translate(x + offsetX, y + offsetY);
        context.scale(this.textScale_[0], this.textScale_[1]);
        if (this.textStrokeState_) {
          context.strokeText(this.text_, 0, 0);
        }
        if (this.textFillState_) {
          context.fillText(this.text_, 0, 0);
        }
        context.setTransform(1, 0, 0, 1, 0, 0);
      } else {
        if (this.textStrokeState_) {
          context.strokeText(this.text_, x + offsetX, y + offsetY);
        }
        if (this.textFillState_) {
          context.fillText(this.text_, x + offsetX, y + offsetY);
        }
      }
>>>>>>> REPLACE
```
