To address the issue of disabling body scrolling when a modal is open, we need to add a class to the body element when the modal is shown and remove it when the modal is hidden. This class will apply CSS styles to prevent scrolling.

Here's the proposed fix:

```javascript
###packages/components/src/components/modal/modal.js
<<<<<<< SEARCH
  _changeState(state, detail, callback) {
    let handleTransitionEnd;
    const transitionEnd = () => {
      if (handleTransitionEnd) {
        handleTransitionEnd = this.unmanage(handleTransitionEnd).release();
      }
      if (
        state === 'shown' &&
        this.element.offsetWidth > 0 &&
        this.element.offsetHeight > 0
      ) {
        (
          this.element.querySelector(this.options.selectorPrimaryFocus) ||
          this.element
        ).focus();
      }
      callback();
    };

    if (this._handleFocusinListener) {
      this._handleFocusinListener = this.unmanage(
        this._handleFocusinListener
      ).release();
    }

    if (state === 'hidden') {
      this.element.classList.toggle(this.options.classVisible, false);
    } else if (state === 'shown') {
      this.element.classList.toggle(this.options.classVisible, true);
    }
    handleTransitionEnd = this.manage(
      on(this.element, 'transitionend', transitionEnd)
    );
  }
=======
  _changeState(state, detail, callback) {
    let handleTransitionEnd;
    const transitionEnd = () => {
      if (handleTransitionEnd) {
        handleTransitionEnd = this.unmanage(handleTransitionEnd).release();
      }
      if (
        state === 'shown' &&
        this.element.offsetWidth > 0 &&
        this.element.offsetHeight > 0
      ) {
        (
          this.element.querySelector(this.options.selectorPrimaryFocus) ||
          this.element
        ).focus();
      }
      callback();
    };

    if (this._handleFocusinListener) {
      this._handleFocusinListener = this.unmanage(
        this._handleFocusinListener
      ).release();
    }

    if (state === 'hidden') {
      this.element.classList.toggle(this.options.classVisible, false);
      document.body.classList.remove(this.options.classNoScroll);
    } else if (state === 'shown') {
      this.element.classList.toggle(this.options.classVisible, true);
      document.body.classList.add(this.options.classNoScroll);
    }
    handleTransitionEnd = this.manage(
      on(this.element, 'transitionend', transitionEnd)
    );
  }
>>>>>>> REPLACE
```

Additionally, we need to add the `classNoScroll` option to the `options` static getter:

```javascript
###packages/components/src/components/modal/modal.js
<<<<<<< SEARCH
  static get options() {
    const { prefix } = settings;
    return {
      selectorInit: '[data-modal]',
      selectorModalClose: '[data-modal-close]',
      selectorPrimaryFocus: '[data-modal-primary-focus]',
      selectorsFloatingMenus: [
        `.${prefix}--overflow-menu-options`,
        `.${prefix}--tooltip`,
        '.flatpickr-calendar',
      ],
      classVisible: 'is-visible',
      attribInitTarget: 'data-modal-target',
      initEventNames: ['click'],
      eventBeforeShown: 'modal-beingshown',
      eventAfterShown: 'modal-shown',
      eventBeforeHidden: 'modal-beinghidden',
      eventAfterHidden: 'modal-hidden',
    };
  }
=======
  static get options() {
    const { prefix } = settings;
    return {
      selectorInit: '[data-modal]',
      selectorModalClose: '[data-modal-close]',
      selectorPrimaryFocus: '[data-modal-primary-focus]',
      selectorsFloatingMenus: [
        `.${prefix}--overflow-menu-options`,
        `.${prefix}--tooltip`,
        '.flatpickr-calendar',
      ],
      classVisible: 'is-visible',
      classNoScroll: 'no-scroll',
      attribInitTarget: 'data-modal-target',
      initEventNames: ['click'],
      eventBeforeShown: 'modal-beingshown',
      eventAfterShown: 'modal-shown',
      eventBeforeHidden: 'modal-beinghidden',
      eventAfterHidden: 'modal-hidden',
    };
  }
>>>>>>> REPLACE
```

Finally, you need to add the following CSS to your project to ensure the `no-scroll` class disables scrolling:

```css
.no-scroll {
  overflow: hidden;
}
```
