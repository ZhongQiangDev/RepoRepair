Based on the issue description, the bug occurs when using BoundaryNorm and hovering over an image, which crashes due to BoundaryNorm not being invertible. The error occurs in the `format_cursor_data` method of the Artist class when trying to normalize data using a BoundaryNorm.

The fix should handle the case where the norm is not invertible by catching the ValueError and returning a default string representation. Here's the proposed fix:

```python
### lib/matplotlib/artist.py
<<<<<<< SEARCH
            normed = self.norm(data)
            if np.isfinite(normed):
                # Midpoints of neighboring color intervals.
                neighbors = self.norm.inverse(
                    (int(self.norm(data) * n) + np.array([0, 1])) / n)
                delta = abs(neighbors - data).max()
                g_sig_digits = cbook._g_sig_digits(data, delta)
            else:
                g_sig_digits = 3  # Consistent with default below.
            return "[{:-#.{}g}]".format(data, g_sig_digits)
=======
            try:
                normed = self.norm(data)
                if np.isfinite(normed):
                    # Midpoints of neighboring color intervals.
                    neighbors = self.norm.inverse(
                        (int(self.norm(data) * n) + np.array([0, 1])) / n)
                    delta = abs(neighbors - data).max()
                    g_sig_digits = cbook._g_sig_digits(data, delta)
                else:
                    g_sig_digits = 3  # Consistent with default below.
                return "[{:-#.{}g}]".format(data, g_sig_digits)
            except ValueError:
                # Handle non-invertible norms like BoundaryNorm
                return "[{:-#.3g}]".format(data)
>>>>>>> REPLACE
```

This fix:

1. Wraps the normalization and inverse calculation in a try-except block
2. Catches ValueError which occurs when the norm is not invertible (like BoundaryNorm)
3. Falls back to a simple string representation with 3 significant digits when the norm is not invertible

This maintains the existing functionality for invertible norms while gracefully handling non-invertible norms like BoundaryNorm.
