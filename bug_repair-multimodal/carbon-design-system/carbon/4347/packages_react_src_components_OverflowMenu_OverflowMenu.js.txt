I'll analyze the issue and provide a solution.

## Issue Analysis

The issue is requesting a "light" version of the Overflow Menu component, similar to what exists for the Text input component. The current gray menu on gray background doesn't work well visually, and they want a `--light` modifier to create a lighter version.

Looking at the code, I need to:
1. Add support for a `light` prop to the OverflowMenu component
2. Add the appropriate class name when the `light` prop is true
3. Update the PropTypes to include this new prop

## Solution

```javascript
### packages/react/src/components/OverflowMenu/OverflowMenu.js
<<<<<<< SEARCH
  static propTypes = {
    /**
     * `true` if the menu should be open.
     */
    open: PropTypes.bool,

    /**
     * The menu direction.
     */
    direction: PropTypes.oneOf([DIRECTION_TOP, DIRECTION_BOTTOM]),

    /**
     * `true` if the menu alignment should be flipped.
     */
    flipped: PropTypes.bool,

    /**
     * The child nodes.
     */
    children: PropTypes.node,

    /**
     * The CSS class names.
     */
    className: PropTypes.string,

    /**
     * The `tabindex` attribute.
     */
    tabIndex: PropTypes.number,

    /**
     * The element ID.
     */
    id: PropTypes.string,

    /**
     * The ARIA label.
     */
    ariaLabel: PropTypes.string,
=======
  static propTypes = {
    /**
     * `true` if the menu should be open.
     */
    open: PropTypes.bool,

    /**
     * The menu direction.
     */
    direction: PropTypes.oneOf([DIRECTION_TOP, DIRECTION_BOTTOM]),

    /**
     * `true` if the menu alignment should be flipped.
     */
    flipped: PropTypes.bool,

    /**
     * `true` to use the light version.
     */
    light: PropTypes.bool,

    /**
     * The child nodes.
     */
    children: PropTypes.node,

    /**
     * The CSS class names.
     */
    className: PropTypes.string,

    /**
     * The `tabindex` attribute.
     */
    tabIndex: PropTypes.number,

    /**
     * The element ID.
     */
    id: PropTypes.string,

    /**
     * The ARIA label.
     */
    ariaLabel: PropTypes.string,
>>>>>>> REPLACE
```

```javascript
### packages/react/src/components/OverflowMenu/OverflowMenu.js
<<<<<<< SEARCH
  static defaultProps = {
    ariaLabel: 'Menu',
    iconDescription: 'open and close list of options',
    open: false,
    direction: DIRECTION_BOTTOM,
    flipped: false,
    renderIcon: OverflowMenuVertical16,
    onClick: () => {},
    onKeyDown: () => {},
    onClose: () => {},
    onOpen: () => {},
    tabIndex: 0,
    menuOffset: getMenuOffset,
    menuOffsetFlip: getMenuOffset,
  };
=======
  static defaultProps = {
    ariaLabel: 'Menu',
    iconDescription: 'open and close list of options',
    open: false,
    direction: DIRECTION_BOTTOM,
    flipped: false,
    light: false,
    renderIcon: OverflowMenuVertical16,
    onClick: () => {},
    onKeyDown: () => {},
    onClose: () => {},
    onOpen: () => {},
    tabIndex: 0,
    menuOffset: getMenuOffset,
    menuOffsetFlip: getMenuOffset,
  };
>>>>>>> REPLACE
```

```javascript
### packages/react/src/components/OverflowMenu/OverflowMenu.js
<<<<<<< SEARCH
    const {
      id,
      tabIndex,
      ariaLabel,
      children,
      iconDescription,
      direction,
      flipped,
      menuOffset,
      menuOffsetFlip,
      iconClass,
      onClick, // eslint-disable-line
      onOpen, // eslint-disable-line
      renderIcon: IconElement,
      innerRef: ref,
      menuOptionsClass,
      ...other
    } = this.props;
=======
    const {
      id,
      tabIndex,
      ariaLabel,
      children,
      iconDescription,
      direction,
      flipped,
      light,
      menuOffset,
      menuOffsetFlip,
      iconClass,
      onClick, // eslint-disable-line
      onOpen, // eslint-disable-line
      renderIcon: IconElement,
      innerRef: ref,
      menuOptionsClass,
      ...other
    } = this.props;
>>>>>>> REPLACE
```

```javascript
### packages/react/src/components/OverflowMenu/OverflowMenu.js
<<<<<<< SEARCH
    const overflowMenuOptionsClasses = classNames(
      menuOptionsClass,
      `${prefix}--overflow-menu-options`,
      {
        [`${prefix}--overflow-menu--flip`]: this.props.flipped,
        [`${prefix}--overflow-menu-options--open`]: open,
      }
    );
=======
    const overflowMenuOptionsClasses = classNames(
      menuOptionsClass,
      `${prefix}--overflow-menu-options`,
      {
        [`${prefix}--overflow-menu--flip`]: this.props.flipped,
        [`${prefix}--overflow-menu-options--open`]: open,
        [`${prefix}--overflow-menu-options--light`]: light,
      }
    );
>>>>>>> REPLACE
```

These changes:
1. Add a `light` prop to the component's PropTypes
2. Set a default value of `false` for the `light` prop
3. Extract the `light` prop from this.props in the render method
4. Add a conditional class name `${prefix}--overflow-menu-options--light` when the `light` prop is true

This implementation follows the pattern used in other Carbon components that have light variants, applying a modifier class that can be styled appropriately in the CSS.
