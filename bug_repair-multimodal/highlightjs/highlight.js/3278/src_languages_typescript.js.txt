I'll analyze the issue and provide a fix.

Based on the issue description, the problem is with TypeScript syntax highlighting when using generics with the `extends` keyword. The issue started in version 10.3.0, and the highlighting breaks after the `extends` keyword.

Looking at the code, I notice that while "extends" is included as a keyword in the INTERFACE definition, it's not properly handled in the general TypeScript keywords. The issue is likely that when "extends" is used in a generic context like `<T extends string>`, it's not being recognized correctly.

Here's the fix:

```javascript
### src/languages/typescript.js
<<<<<<< SEARCH
  const TS_SPECIFIC_KEYWORDS = [
    "type",
    "namespace",
    "typedef",
    "interface",
    "public",
    "private",
    "protected",
    "implements",
    "declare",
    "abstract",
    "readonly"
  ];
=======
  const TS_SPECIFIC_KEYWORDS = [
    "type",
    "namespace",
    "typedef",
    "interface",
    "public",
    "private",
    "protected",
    "implements",
    "declare",
    "abstract",
    "readonly",
    "extends"
  ];
>>>>>>> REPLACE
```

This fix adds "extends" to the TypeScript-specific keywords list, ensuring it's properly recognized in all contexts, including generic type constraints like `<T extends string>`. This should fix the syntax highlighting issue where highlighting breaks after the `extends` keyword in generic type definitions.
