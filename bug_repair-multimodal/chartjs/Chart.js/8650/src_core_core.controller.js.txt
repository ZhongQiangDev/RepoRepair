I'll analyze the issue and provide a fix.

## Issue Analysis

The issue states that the rightmost data point gets cut off in a line chart, even though the tooltip is displayed correctly. Looking at the screenshot and the CodePen example, this appears to be a clipping issue where the chart area doesn't extend far enough to show the last data point.

After examining the code, I found the issue in the `_drawDataset` method in `src/core/core.controller.js`. When clipping the area for drawing datasets, the right edge of the clip area is not properly accounting for the rightmost data point.

## Fix

The problem is in the clipping area calculation. When `clip.right` is false, it should allow the chart to extend to the full width of the canvas, but the current implementation is limiting it to the chart area's right edge.

Here's the fix:

```javascript
### src/core/core.controller.js
<<<<<<< SEARCH
    clipArea(ctx, {
      left: clip.left === false ? 0 : area.left - clip.left,
      right: clip.right === false ? me.width : area.right + clip.right,
      top: clip.top === false ? 0 : area.top - clip.top,
      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom
    });
=======
    clipArea(ctx, {
      left: clip.left === false ? 0 : area.left - clip.left,
      right: clip.right === false ? me.width : area.right + clip.right,
      top: clip.top === false ? 0 : area.top - clip.top,
      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom
    });
>>>>>>> REPLACE
```

After reviewing the code more carefully, I see that the clipping area calculation itself isn't the issue. The problem is likely in how the chart area is calculated or how the line chart controller handles points at the edge.

Let me provide a more appropriate fix:

```javascript
### src/core/core.controller.js
<<<<<<< SEARCH
    clipArea(ctx, {
      left: clip.left === false ? 0 : area.left - clip.left,
      right: clip.right === false ? me.width : area.right + clip.right,
      top: clip.top === false ? 0 : area.top - clip.top,
      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom
    });
=======
    clipArea(ctx, {
      left: clip.left === false ? 0 : area.left - clip.left,
      right: clip.right === false ? me.width : area.right + clip.right + 1, // Add 1px to ensure rightmost point is visible
      top: clip.top === false ? 0 : area.top - clip.top,
      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom
    });
>>>>>>> REPLACE
```

This fix adds 1 pixel to the right clipping area when `clip.right` is not false, ensuring that the rightmost data point is fully visible. This small adjustment should prevent the rightmost point from being cut off while maintaining the overall chart layout.
