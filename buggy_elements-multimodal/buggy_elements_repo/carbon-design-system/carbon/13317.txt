### 1. Identify the Wrong Behavior Involved in `GitHub Problem Description`

The GitHub problem description indicates that the RadioGroup implementation needs to support field validation errors, specifically the following states:
- Invalid (error)
- Warn
- Helper text

The current implementation does not seem to handle these validation states properly, as the issue is to track the development of these features.

### 2. Analyze the Cause Behind the Wrong Behavior

The cause of the wrong behavior is likely due to the lack of implementation for the validation states in the RadioGroup and its related components. The RadioGroup and its child RadioButtons need to be updated to support the `invalid`, `warn`, and `helper text` states. This includes updating the visual styles, adding appropriate attributes for accessibility, and ensuring that the validation messages are displayed correctly.

### 3. Examine Each File One by One

#### `FormGroup.js`
This file contains the `function_1` which is a React functional component that renders a fieldset. This component is relevant because it can be used to wrap the RadioGroup and apply the validation states.

```
packages/react/src/components/FormGroup/FormGroup.js
function: function_1
```

#### `RadioButton.js`
This file contains the `RadioButton` component. This component needs to be updated to support the validation states, such as displaying the validation messages and applying the appropriate styles.

```
packages/react/src/components/RadioButton/RadioButton.js
function: RadioButton
```

#### `RadioButtonGroup.js`
This file contains the `RadioButtonGroup` component. This component needs to be updated to manage the validation states for the group of RadioButtons, including passing the validation state to the individual RadioButtons and handling the validation messages.

```
packages/react/src/components/RadioButtonGroup/RadioButtonGroup.js
function: RadioButtonGroup
```

#### `useNormalizedInputProps.js`
This file contains the `useNormalizedInputProps` function, which normalizes input props and handles validation states. This function can be used to help manage the validation states for the RadioGroup and RadioButtons.

```
packages/react/src/internal/useNormalizedInputProps.js
function: useNormalizedInputProps
```

#### Summary of Relevant Files and Functions/Classes

```
packages/react/src/components/FormGroup/FormGroup.js
function: function_1

packages/react/src/components/RadioButton/RadioButton.js
function: RadioButton

packages/react/src/components/RadioButtonGroup/RadioButtonGroup.js
function: RadioButtonGroup

packages/react/src/internal/useNormalizedInputProps.js
function: useNormalizedInputProps
```
