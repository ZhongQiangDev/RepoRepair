### 1. Identify the Wrong Behavior Involved in `GitHub Problem Description`

The wrong behavior described in the GitHub problem is that **typed Start Events are allowed inside non-event-based Sub Processes**, which is not compliant with BPMN standards. The goal is to disallow the morphing of a Start Event into a typed Start Event inside a non-event-based Sub Process and to drop the event type when moving a Start Event into such a Sub Process.

### 2. Analyze the Cause Behind the Wrong Behavior

The cause of this behavior likely lies in the BPMN modeling rules and the logic that handles the replacement and creation of BPMN elements. Specifically, the rules that determine whether an element can be replaced or created in a specific context (such as inside a Sub Process) may not be correctly enforcing the BPMN standard that disallows typed Start Events in non-event-based Sub Processes.

### 3. Examine Each File One by One and Determine Relevant Functions/Classes

#### --- lib/features/modeling/BpmnFactory.js ---
This file contains no relevant functions/classes.

#### --- lib/features/modeling/behavior/ReplaceElementBehaviour.js ---
```
lib/features/modeling/behavior/ReplaceElementBehaviour.js
function: function_6
```
The `replaceElements` function is relevant because it handles the replacement of elements in the BPMN diagram. It may need to be modified to ensure that typed Start Events cannot be replaced inside non-event-based Sub Processes.

#### --- lib/features/popup-menu/ReplaceMenuProvider.js ---
```
lib/features/popup-menu/ReplaceMenuProvider.js
function: function_3
```
The `getEntries` function is relevant because it filters menu entry items for a given element based on its type and attributes. It may need to be modified to ensure that typed Start Event options are not available for replacement inside non-event-based Sub Processes.

#### --- lib/features/replace/BpmnReplace.js ---
```
lib/features/replace/BpmnReplace.js
function: BpmnReplace
```
The `BpmnReplace` function is relevant because it handles the replacement of BPMN elements in the diagram. It may need to be modified to ensure that typed Start Events cannot be replaced inside non-event-based Sub Processes.

#### --- lib/features/rules/BpmnRules.js ---
```
lib/features/rules/BpmnRules.js
function: canReplace
```
The `canReplace` function is relevant because it checks whether certain BPMN elements can be replaced under specific conditions. It may need to be modified to ensure that typed Start Events cannot be replaced inside non-event-based Sub Processes.
