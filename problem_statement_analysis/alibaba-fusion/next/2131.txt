Based on the provided GitHub problem description and code snippets, I can identify the following issues:

### Answer 1
**Wrong Behavior**: TypeError: Cannot read property 'pos' of undefined in tree.js
**Cause**: The error occurs because the code is trying to access `item.pos` when `item` is undefined. This is happening in the drill function where it attempts to read and assign the pos property. The code assumes that item will always have a pos property, but in some cases, the item object is not properly initialized or is undefined.

### Answer 2
**Wrong Behavior**: Cannot add property pos, object is not extensible
**Cause**: This error occurs because the code is attempting to modify an immutable object. In the code snippet, there's an attempt to set `item.pos = pos` on line 174, but the item object appears to be frozen or sealed, preventing the addition of new properties. This is likely due to the data being handled as immutable in version 1.20.23, whereas it worked in 1.19.x because the objects were mutable.

### Conclusion
**Summary**: The main issues stem from two key problems:
1. Data immutability handling: The newer version (1.20.23) is treating objects as immutable, which prevents modification of properties that worked in previous versions (1.19.x).
2. Undefined object access: The code doesn't properly check for undefined values before accessing properties, leading to runtime errors.

To fix these issues, the code should:
- Implement proper null/undefined checks before accessing object properties
- Create new objects instead of trying to modify immutable ones
- Consider using a proper state management approach that respects immutability principles
- Ensure the data structure is properly initialized before processing