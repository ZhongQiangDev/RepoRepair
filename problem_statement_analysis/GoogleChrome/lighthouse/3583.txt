Let me analyze the GitHub problem description and break down the issues:

### Answer 1
**Wrong Behavior**: iframes are being incorrectly considered as critical requests in the Critical Request Chain (CRC) tree
**Cause**: The system is likely treating iframes as render-blocking resources similar to CSS or synchronous JavaScript, when in reality iframes load asynchronously and don't block the main page rendering

### Answer 2
**Wrong Behavior**: Data URIs are being included in the Critical Request Chain tree
**Cause**: The system is treating data URIs as network requests, when they are actually inline resources that don't require separate HTTP requests. This is evident in the Washington Post CRC screenshot showing data URI nodes.

### Answer 3
**Wrong Behavior**: Non-leaf data URI nodes cannot be easily removed from the CRC tree
**Cause**: The current tree structure implementation likely has dependencies or child nodes connected to non-leaf data URI nodes, making their removal more complex without breaking the tree structure

### Conclusion
**Summary**: The CRC tree implementation has three main issues: (1) incorrect classification of iframes as critical requests when they don't block rendering, (2) unnecessary inclusion of data URIs which aren't actual network requests, and (3) structural limitations preventing clean removal of non-leaf data URI nodes. These issues are causing the CRC tree to inaccurately represent the true critical path of resource loading, potentially leading to misleading performance metrics.