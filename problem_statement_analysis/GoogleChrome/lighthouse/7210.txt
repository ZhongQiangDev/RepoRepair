### Answer 1
**Wrong Behavior**: Pagespeed is reporting a size of 80kb and a potential savings of 70kb under 'Defer unused CSS' when the actual configuration fetched by the tool is only around 20kb gzipped.
**Cause**: The discrepancy in reported size and potential savings is likely due to the way Pagespeed calculates the size of the CSS. It appears that Pagespeed is not accurately accounting for the GZIP compression ratio, leading to an overestimation of the size and potential savings. This could be because the default GZIP compression ratio used by Pagespeed is pessimistic and does not reflect the actual compression achieved by the tool.

### Answer 2
**Wrong Behavior**: Calculated scores and savings are not based on actually fetched resources, but rather on the size in the DOM.
**Cause**: The tool fetches its styles via gzipped JSON and appends it in a style tag to the DOM. Pagespeed may be measuring the size of the CSS after it has been decompressed and appended to the DOM, rather than the size of the gzipped JSON that was actually fetched. This can lead to an overestimation of the size and potential savings, as the decompressed size is larger than the fetched size.

### Conclusion
**Summary**: The main issues are that Pagespeed is not accurately accounting for the GZIP compression ratio and is measuring the size of the CSS after it has been decompressed and appended to the DOM, rather than the size of the gzipped JSON that was actually fetched. These issues can be addressed by improving the way Pagespeed calculates the size of the CSS and ensuring that it is based on the actually fetched resources.