### Answer 1
**Wrong Behavior**: The Camunda Modeler disallows connecting a message flow from an activity in one participant to an intermediate message catch boundary event.
**Cause**: The current implementation of the Camunda Modeler does not align with the BPMN 2.0 specification. According to the specification, intermediate message catch boundary events should be allowed as targets for message flows. The disallowance is likely due to a misinterpretation or oversight in the implementation of the BPMN rules within the Camunda Modeler.

### Answer 2
**Wrong Behavior**: The modeler does not permit the connection of message flows to intermediate message catch boundary events, even though this is specified as valid in the BPMN 2.0 specification.
**Cause**: The issue may stem from a specific rule or validation logic within the Camunda Modeler that incorrectly restricts message flows from targeting boundary events. This could be a result of a previous code change (as mentioned in issue #1300) that inadvertently introduced this restriction without considering the special case of message catch boundary events.

### Conclusion
**Summary**: The primary issue is that the Camunda Modeler does not allow message flows to target intermediate message catch boundary events, which is contrary to the BPMN 2.0 specification. This behavior is likely caused by a misinterpretation of the BPMN rules within the modeler's implementation and a possible oversight in the validation logic that restricts message flows from targeting boundary events. To resolve this, the Camunda Modeler's rules and validation logic need to be updated to correctly reflect the BPMN 2.0 specification, specifically allowing message flows to target intermediate message catch boundary events.  
Video 1: ![](https://user-images.githubusercontent.com/42800119/91721650-65e12900-eb99-11ea-9152-2e1ce15134f5.gif)  
Picture 1: ![](https://user-images.githubusercontent.com/42800119/91722034-f91a5e80-eb99-11ea-891e-835d14dca192.png)