### Answer 1
**Wrong Behavior**: Allowing typed start events inside non-event-based sub-processes.
**Cause**: The current implementation does not enforce BPMN rules that prohibit typed start events within non-event-based sub-processes. This could be due to a lack of validation logic in the BPMN modeler or a misinterpretation of BPMN specifications.

### Answer 2
**Wrong Behavior**: The ability to morph a start event to a typed start event inside a sub-process.
**Cause**: The morphing functionality does not account for the context of the sub-process. It allows changes that violate BPMN standards, indicating a flaw in the morphing logic or a missing context-aware validation mechanism.

### Answer 3
**Wrong Behavior**: Not dropping the event type when moving a start event into a sub-process.
**Cause**: The event type is not being reset when the start event is moved into a sub-process, which suggests a missing or incorrect event type reset logic. This could be due to an oversight in the event handling or movement logic within the BPMN modeler.

### Conclusion
**Summary**: The primary issues stem from a lack of adherence to BPMN standards within the BPMN modeler. The modeler allows actions that violate BPMN rules, such as placing typed start events in non-event-based sub-processes, morphing start events incorrectly, and failing to reset event types when moving events. These issues can be addressed by implementing stricter validation and context-aware logic in the modeler.  
Video 1: ![Video 1](https://user-images.githubusercontent.com/58601/42630599-9be1950a-85d7-11e8-8625-0683b09b28b7.gif)  
Video 2: ![Video 2](https://user-images.githubusercontent.com/58601/42630599-9be1950a-85d7-11e8-8625-0683b09b28b7.gif)