### Answer 1
**Wrong Behavior**: The image layer renderer creates a canvas with a size based on the display pixel ratio instead of the image ratio of the source.
**Cause**: The renderer does not take into account the pixel ratio of the image source when creating the canvas. As a result, for HiDPI devices, the canvas size is unnecessarily large, leading to excessive memory usage.

### Answer 2
**Wrong Behavior**: The canvas size is twice as big as it needs to be for HiDPI devices.
**Cause**: The renderer assumes the display pixel ratio for all image sources, without considering the actual pixel ratio of the image source. This leads to a canvas that is larger than necessary, consuming 4 times the memory required.

### Conclusion
**Summary**: The main issue is that the image layer renderer does not properly account for the pixel ratio of the image source when creating the canvas. This results in an unnecessarily large canvas size for HiDPI devices, leading to excessive memory usage. To fix this, the renderer should consider the actual pixel ratio of the image source when determining the canvas size. This would ensure that the canvas is only as large as necessary, reducing memory usage and improving performance.