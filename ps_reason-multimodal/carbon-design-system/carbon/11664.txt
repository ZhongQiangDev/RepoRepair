Based on the GitHub problem description and the provided screenshot, I'll analyze the wrong behaviors and their causes.

### Answer 1
**Wrong Behavior**: The OverflowMenu component shows a deprecation warning about the 'light' prop even though the prop is not being used in the code.
**Cause**: The component is likely checking for the existence of the 'light' prop in its internal implementation and showing the deprecation warning regardless of whether the prop is actually being passed. This suggests there might be a default prop value or an incorrect implementation of the deprecation warning logic.

### Answer 2
**Wrong Behavior**: The warning message is affecting unit tests that check for console warnings.
**Cause**: The unnecessary deprecation warning is being logged to the console, which triggers failures in unit tests that are designed to catch unexpected console warnings. This indicates that the warning system is too aggressive and needs to be modified to only warn when the deprecated prop is actually being used.

### Conclusion
**Summary**: The main issue stems from an overly aggressive deprecation warning system in the OverflowMenu component from @carbon/react. The component is incorrectly showing warnings about the deprecated 'light' prop even when it's not being used, which not only creates unnecessary noise in the console but also causes problems with unit tests that monitor console warnings. This suggests that the deprecation warning logic needs to be updated to only trigger when the 'light' prop is actually present in the component props, rather than showing up unconditionally.

The fix would likely involve modifying the component's internal logic to only show the deprecation warning when the 'light' prop is explicitly passed to the component.