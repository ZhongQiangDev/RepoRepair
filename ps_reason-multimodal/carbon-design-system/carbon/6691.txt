Let me analyze the problem and break down the wrong behaviors and their causes.

### Answer 1
**Wrong Behavior**: The FormGroup component throws a prop type warning when passing an object (Tooltip component) as legendText
**Cause**: The FormGroup component's PropTypes validation is strictly enforcing legendText to be a string type, not allowing React elements or components to be passed as the legendText value.

### Answer 2
**Wrong Behavior**: Inconsistency in component behavior across Carbon Design System
**Cause**: While TextInput component supports complex objects/components for its labelText prop, FormGroup doesn't provide the same flexibility for its legendText prop, creating an inconsistent developer experience within the same design system.

### Answer 3
**Wrong Behavior**: Limited accessibility features for form group labels
**Cause**: The current implementation prevents developers from adding enhanced accessibility features like tooltips to provide additional context or help information to users, which could be particularly important for form elements.

### Conclusion
**Summary**: The main issue stems from the FormGroup component's restrictive prop type validation that only accepts strings for legendText. This creates three key problems: 1) inability to use tooltip components with form group labels, 2) inconsistency with other Carbon Design System components that do support complex label structures, and 3) limitations in providing enhanced accessibility features. The solution would likely involve updating the PropTypes definition for legendText to accept both string and node/element types, similar to how TextInput's labelText prop is implemented.