Let me analyze the GitHub problem description and break down the wrong behaviors and their causes.

### Answer 1
**Wrong Behavior**: The vertex colors in WebGL mode are not being interpolated correctly in p5.js version 0.9.0, resulting in solid color fills instead of smooth color transitions between vertices.

**Cause**: There appears to be a regression in the WebGL rendering pipeline between versions 0.8.0 and 0.9.0 that affects how vertex colors are processed and interpolated. The color interpolation functionality that was working correctly in version 0.8.0 is no longer functioning as expected in version 0.9.0.

### Answer 2
**Wrong Behavior**: The shape appears to be filled with a single solid color instead of showing the gradient effect defined by different fill() colors at each vertex.

**Cause**: The WebGL shader or vertex attribute handling in version 0.9.0 might not be properly passing or processing the color information for each vertex. This could be due to:
1. Changes in how color attributes are bound to vertices
2. Modifications to the WebGL shader implementation
3. Possible issues with the color interpolation calculations in the fragment shader

### Conclusion
**Summary**: The main issue revolves around a regression in WebGL vertex color handling in p5.js version 0.9.0. While version 0.8.0 correctly interpolates colors between vertices creating smooth gradients, version 0.9.0 fails to maintain this functionality. The problem likely stems from changes in the WebGL implementation, specifically in how vertex colors are processed and interpolated in the rendering pipeline. This affects any WebGL sketches that rely on vertex-based color interpolation, resulting in solid color fills instead of the expected smooth color transitions.