### 1. Identify the Wrong Behavior Involved in `GitHub Problem Description`

The wrong behavior described is that the `legendText` prop of the `FormGroup` component only accepts `string` values and does not support `object` values, such as a `Tooltip` component. This limitation prevents the user from adding help information to the legend text.

### 2. Analyze the Cause Behind the Wrong Behavior

The cause of this behavior is likely due to the prop type validation in the `FormGroup` component. The `legendText` prop is currently defined to accept only `string` values, which means that when an `object` (like a `Tooltip` component) is passed, it triggers a prop type warning.

### 3. Examine Each File One by One

#### packages/react/src/components/FormGroup/FormGroup.js

This file contains the `FormGroup` component, which is directly related to the issue. The `legendText` prop is used here, and its type is likely defined as `string`. We need to modify this file to allow `object` values for the `legendText` prop.

```
packages/react/src/components/FormGroup/FormGroup.js
function: function_1
```

#### packages/react/src/components/Tooltip/Tooltip-story.js

This file contains story configurations for the `Tooltip` component. While it is related to the `Tooltip` component, it does not directly affect the `legendText` prop of the `FormGroup` component. Therefore, it is not directly relevant to the issue.

```
This file contains no relevant functions/classes.
```

#### packages/react/src/components/Tooltip/Tooltip.js

This file contains the `Tooltip` component, which the user wants to use as the `legendText` prop value. While it is related to the `Tooltip` component, it does not directly affect the `legendText` prop of the `FormGroup` component. Therefore, it is not directly relevant to the issue.

```
This file contains no relevant functions/classes.
```

### Summary of Relevant Locations

```
packages/react/src/components/FormGroup/FormGroup.js
function: function_1
```
