### 1. Identify the Wrong Behavior Involved in `GitHub Problem Description`

The wrong behavior described is that when using `beginShape(QUADS)` in WebGL mode, the resulting shape has self-intersections, unlike in 2D mode. Specifically, the vertices are not being processed in the same order as in 2D mode, leading to an incorrect rendering of the quad as two triangles with a diagonal intersection.

### 2. Analyze the Cause Behind the Wrong Behavior

The cause of this issue is likely related to how the vertices are processed and rendered in WebGL mode compared to 2D mode. In 2D mode, the vertices are processed in a way that forms a single quad, while in WebGL mode, the vertices are processed as two separate triangles, leading to the self-intersection. This suggests a difference in how the `QUADS` mode is handled in the WebGL renderer compared to the 2D renderer.

### 3. Examine Each File One by One

#### `src/core/rendering.js`
This file contains no relevant functions/classes.

#### `src/core/shape/vertex.js`
```
src/core/shape/vertex.js
function: function_2
```
The `beginShape` function is relevant because it initializes the shape drawing process and handles the `QUADS` mode. The issue might be related to how the `QUADS` mode is handled differently in WebGL compared to 2D.

#### `src/webgl/p5.Geometry.js`
This file contains no relevant functions/classes.

#### `src/webgl/p5.RendererGL.Immediate.js`
```
src/webgl/p5.RendererGL.Immediate.js
function: function_2
function: function_5
function: function_6
```
- `function_2`: This function handles the addition of vertices for custom shapes in WebGL. It might be relevant if the issue is related to how vertices are added and processed for `QUADS`.
- `function_5`: This function is responsible for finalizing shape rendering in WebGL. It might be relevant if the issue is related to how the shape is finalized and rendered.
- `function_6`: This function generates edge indices for custom shapes based on the provided `shapeMode`. It might be relevant if the issue is related to how edges are generated for `QUADS`.

#### `src/webgl/p5.RendererGL.js`
```
src/webgl/p5.RendererGL.js
function: function_5
```
The `rotate` function might be relevant if the issue is related to transformations applied to the shape, although it is less likely to be the direct cause of the self-intersection issue.

### Summary of Relevant Locations
```
src/core/shape/vertex.js
function: function_2

src/webgl/p5.RendererGL.Immediate.js
function: function_2
function: function_5
function: function_6

src/webgl/p5.RendererGL.js
function: function_5
```
