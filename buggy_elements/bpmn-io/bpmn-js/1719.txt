### 1. Identify the Wrong Behavior Involved in `GitHub Problem Description`

The wrong behavior described is that labels inside a sub-process remain visible and even move outside the sub-process boundary when the sub-process is collapsed. This is unexpected, as labels should be hidden when the sub-process is collapsed.

### 2. Analyze the Cause Behind the Wrong Behavior

The issue likely stems from the way the BPMN editor handles the visibility and positioning of labels when a sub-process is collapsed. Specifically, the editor may not be correctly updating the visibility or position of the labels when the sub-process state changes from expanded to collapsed.

### 3. Examine Each File One by One

#### `lib/features/label-editing/LabelEditingProvider.js`

This file contains functions related to label editing and positioning. The following functions may be relevant:

```
lib/features/label-editing/LabelEditingProvider.js
function: function_10
function: function_11
function: function_12
function: function_9
```

These functions handle the calculation of bounding boxes, updating labels, and activating direct editing, which could be involved in the incorrect positioning and visibility of labels.

#### `lib/features/modeling/behavior/SubProcessPlaneBehavior.js`

This file contains functions related to the behavior of sub-process planes. The following functions may be relevant:

```
lib/features/modeling/behavior/SubProcessPlaneBehavior.js
function: function_25
function: function_23
```

These functions manage the movement and visibility of child elements within a sub-process, which could be related to the issue.

#### `lib/features/modeling/behavior/ToggleElementCollapseBehaviour.js`

This file contains functions related to toggling the collapse state of elements. The following functions may be relevant:

```
lib/features/modeling/behavior/ToggleElementCollapseBehaviour.js
function: filterVisible
function: ToggleElementCollapseBehaviour
```

These functions handle the visibility of elements when a shape is collapsed or expanded, which is directly related to the issue.

#### `lib/features/ordering/BpmnOrderingProvider.js`

This file contains functions related to the rendering order of elements. The following function may be relevant:

```
lib/features/ordering/BpmnOrderingProvider.js
function: BpmnOrderingProvider
```

This function manages the rendering order of elements, which could affect the visibility of labels.

#### `lib/util/LabelUtil.js`

This file contains utility functions for label calculations. The following functions may be relevant:

```
lib/util/LabelUtil.js
function: getExternalLabelBounds
function: getExternalLabelMid
function: hasExternalLabel
function: isLabelExternal
```

These functions calculate the bounds and positions of labels, which could be involved in the incorrect positioning of labels.

### Summary of Relevant Locations

```
lib/features/label-editing/LabelEditingProvider.js
function: function_10
function: function_11
function: function_12
function: function_9

lib/features/modeling/behavior/SubProcessPlaneBehavior.js
function: function_25
function: function_23

lib/features/modeling/behavior/ToggleElementCollapseBehaviour.js
function: filterVisible
function: ToggleElementCollapseBehaviour

lib/features/ordering/BpmnOrderingProvider.js
function: BpmnOrderingProvider

lib/util/LabelUtil.js
function: getExternalLabelBounds
function: getExternalLabelMid
function: hasExternalLabel
function: isLabelExternal
```
