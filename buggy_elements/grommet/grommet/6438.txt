### 1. Identify the Wrong Behavior Involved in `GitHub Problem Description`

The wrong behavior described is that it is possible to select a day from the last month outside the `DateInput` calendarProps bounds. Specifically, the screenshot shows that the current bounds are `['2020-07-01', '2020-07-31']`, but the user can still select June 30, 2020, which is outside these bounds.

### 2. Analyze the Cause Behind the Wrong Behavior

The cause of this issue likely lies in how the calendar component handles date selection and boundary checks. The calendar should disable or prevent selection of dates that fall outside the specified bounds. However, it seems that the logic responsible for disabling these dates is not functioning correctly, allowing the user to select dates outside the defined range.

### 3. Examine Each File One by One

#### `src/js/components/Calendar/Calendar.js`

This file contains several functions and components that are relevant to the calendar's functionality. The following functions and components are relevant:

```
src/js/components/Calendar/Calendar.js
function: function_13
function: function_14
function: function_16
```

- `function_13`: This function manages the calendar's core functionality, including date selection and bounds. It likely needs to be checked to ensure it correctly handles the bounds and disables dates outside the range.
- `function_14`: This function represents a single day in the calendar. It should ensure that days outside the bounds are not selectable.
- `function_16`: This function is another implementation of the calendar component and should also be checked for similar issues.

#### `src/js/components/Calendar/utils.js`

This file contains utility functions for date manipulation and comparison. The following functions are relevant:

```
src/js/components/Calendar/utils.js
function: function_12
function: function_13
function: function_14
```

- `function_12`: This function checks if a date falls within specified date ranges. It should be used to ensure that dates outside the bounds are not selectable.
- `function_13`: This function checks if a date matches any date in an array or falls within any date ranges. It should also be used to ensure that dates outside the bounds are not selectable.
- `function_14`: This function normalizes a date, which might be relevant for ensuring consistent date handling.

#### `src/js/components/DateInput/DateInput.js`

This file contains the `DateInput` component, which integrates the calendar. The following function is relevant:

```
src/js/components/DateInput/DateInput.js
function: function_3
```

- `function_3`: This function manages the props for the calendar component and should ensure that the calendar is correctly configured with the bounds.

#### `src/js/components/DateInput/utils.js`

This file contains utility functions for date input. The following function is relevant:

```
src/js/components/DateInput/utils.js
function: function_8
```

- `function_8`: This function converts text to a date value and might be relevant for ensuring that dates outside the bounds are not processed.

#### `src/js/components/DateInput/stories/Range.js`

This file contains a story for the `DateInput` component. It does not contain any relevant functions or classes for fixing the issue:

```
This file contains no relevant functions/classes.
```
