1. **Identify the wrong behavior involved in `GitHub Problem Description`:**
   The wrong behavior is that primitive types (`int`, `char`, etc.) are not being highlighted as keywords in C++ code. Instead, they are highlighted separately from other keywords, which makes the code look unnatural and confusing compared to how popular IDEs and text editors handle C++ syntax highlighting.

2. **Analyze the cause behind the wrong behavior:**
   The cause is likely due to the changes made in the commit `1be7a28`, where primitive types were moved from `RESERVED_TYPES` to `RESERVED_KEYWORDS`. This change altered how Highlight.js treats these primitive types, causing them to be highlighted differently from other keywords. The goal is to revert this behavior so that primitive types are highlighted as keywords, similar to how they are treated in other popular C++ IDEs.

3. **Find up to 5 files most related to the cause from `Repository Information`:**
   ```
   src/languages/cpp.js
   src/languages/c.js
   src/languages/arduino.js
   types/index.d.ts
   ```

   - `src/languages/cpp.js`: This file is directly responsible for defining the syntax highlighting rules for C++. It is the most important file to modify to fix the issue.
   - `src/languages/c.js`: Since C++ is a superset of C, changes in how C handles keywords might also affect C++. Reviewing this file could provide insights into how primitive types should be treated.
   - `src/languages/arduino.js`: Arduino uses C++ as its base language, so its configuration might also be relevant for understanding how primitive types should be highlighted.
   - `types/index.d.ts`: This file contains type definitions that might be used in the syntax highlighting rules. Ensuring that the types used for keywords and primitive types are consistent could be important.
