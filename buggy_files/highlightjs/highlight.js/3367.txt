1. **Identify the Wrong Behavior:**
   The wrong behavior is that the syntax highlighting does not correctly separate numbers from keywords when they are directly adjacent. In the provided examples, the keyword `if` is not recognized as a separate keyword when it follows a number without a space.

2. **Analyze the Cause:**
   The issue likely stems from the regular expression patterns used for identifying numbers and keywords. If the pattern for numbers is too greedy or does not properly account for boundaries, it may consume the subsequent keyword. Additionally, the keyword detection might not be set up to handle cases where a keyword directly follows a number.

3. **Find Related Files:**
   The most relevant files for this issue would be those that define the syntax highlighting rules for Python, as the problem is specific to the Python language configuration.

```
src/languages/python.js
src/languages/python-repl.js
src/languages/node-repl.js
```

- `src/languages/python.js`: This file is the primary configuration for Python syntax highlighting and would contain the rules for numbers and keywords.
- `src/languages/python-repl.js`: This file configures syntax highlighting for Python REPL interactions, which might also be relevant if the issue occurs in REPL contexts.
- `src/languages/node-repl.js`: Although this is for Node.js REPL, it might have some shared logic or patterns that could be relevant if the issue is related to REPL-specific highlighting.
