### 1. Identify the Wrong Behavior Involved in GitHub Problem Description

The wrong behavior involves the loss of multi-instance properties when switching between parallel and sequential multi-instance configurations in a BPMN sub-process. Specifically, when the user changes the multi-instance type from parallel to sequential, the properties set for the multi-instance configuration (such as loop cardinality, collection, and completion condition) are lost.

### 2. Analyze the Cause Behind the Wrong Behavior

The cause of this issue likely stems from how the BPMN modeler handles the transition between parallel and sequential multi-instance configurations. When the multi-instance type is changed, the modeler may not properly preserve the existing multi-instance properties, leading to their loss. This could be due to a lack of proper state management or a missing mechanism to transfer the properties between the two configurations.

### 3. Find Up to 5 Files Most Related to the Cause

Based on the analysis, the following files are most likely related to the cause of the issue:

```
lib/features/modeling/behavior/ReplaceElementBehaviour.js
lib/features/modeling/behavior/SubProcessPlaneBehavior.js
lib/features/modeling/behavior/UpdateFlowNodeRefsBehavior.js
lib/features/modeling/behavior/ModelingFeedback.js
lib/util/ModelUtil.js
```

- `lib/features/modeling/behavior/ReplaceElementBehaviour.js`: This file is responsible for replacing elements in a BPMN diagram, which may include handling the transition between parallel and sequential multi-instance configurations.
- `lib/features/modeling/behavior/SubProcessPlaneBehavior.js`: This file manages the behavior of sub-processes, including their multi-instance properties, and may be involved in preserving these properties during configuration changes.
- `lib/features/modeling/behavior/UpdateFlowNodeRefsBehavior.js`: This file updates flow node references, which could be relevant when reconfiguring multi-instance properties.
- `lib/features/modeling/behavior/ModelingFeedback.js`: This file provides feedback when modeling actions are rejected, which may be useful for debugging the issue.
- `lib/util/ModelUtil.js`: This file contains utility functions for working with BPMN elements, including retrieving business objects, which may be necessary for managing multi-instance properties.
