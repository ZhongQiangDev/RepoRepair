1. **Identify the wrong behavior involved in `GitHub Problem Description`:**
   The issue is that the current implementation does not allow toggling the `isCollection` property on a data object, input, or output in a BPMN diagram. According to the BPMN 2.0 specification, data objects can have an `isCollection` marker, but this functionality is missing in the current implementation.

2. **Analyze the cause behind the wrong behavior:**
   The cause is likely due to the absence of a mechanism to toggle the `isCollection` property for data objects. This involves both the graphical representation (adding/removing the collection marker) and the underlying model (updating the `isCollection` property in the BPMN XML).

3. **Find up to 5 files most related to the cause from `Repository Information`:**

```
lib/features/modeling/behavior/CreateDataObjectBehavior.js
lib/draw/BpmnRenderer.js
lib/draw/BpmnRenderUtil.js
lib/features/modeling/BpmnFactory.js
lib/util/DiUtil.js
```

- `lib/features/modeling/behavior/CreateDataObjectBehavior.js`: This file is responsible for creating `DataObject` elements. It needs to be modified to include the ability to toggle the `isCollection` property when creating or updating a `DataObject`.
- `lib/draw/BpmnRenderer.js`: This file handles the rendering of BPMN elements. It needs to be updated to visually represent the `isCollection` marker on `DataObject` elements.
- `lib/draw/BpmnRenderUtil.js`: This file contains utility functions for rendering BPMN elements. It may need to include logic for rendering the `isCollection` marker.
- `lib/features/modeling/BpmnFactory.js`: This file is responsible for creating BPMN elements and their properties. It should be updated to handle the `isCollection` property for `DataObject` elements.
- `lib/util/DiUtil.js`: This file contains utility functions for working with BPMN elements. It may need to include logic for checking and setting the `isCollection` property.
