### 1. Identify the Wrong Behavior Involved in `GitHub Problem Description`

The wrong behavior described is that when changing a sub-process from a parallel multi-instance to a sequential multi-instance, the multi-instance properties (such as loop cardinality, collection, and completion condition) are lost. This indicates a problem with the preservation of properties during the transition between different types of multi-instance configurations.

### 2. Analyze the Cause Behind the Wrong Behavior

The cause likely lies in how the properties are managed and updated when the multi-instance type is changed. Specifically, the issue could be related to the following:

- The properties might not be properly saved or transferred when the multi-instance type is switched.
- There could be a missing or incorrect event handler that fails to preserve the properties during the transition.
- The logic responsible for updating the properties might not be correctly handling the transition between parallel and sequential multi-instance configurations.

### 3. Find Up to 5 Files Most Related to the Cause

Based on the analysis, the following files are most likely related to the cause of the issue:

```
lib/features/modeling/behavior/ReplaceElementBehaviour.js
lib/features/modeling/behavior/SubProcessPlaneBehavior.js
lib/features/modeling/behavior/UpdateFlowNodeRefsBehavior.js
lib/features/modeling/cmd/UpdatePropertiesHandler.js
lib/util/ModelUtil.js
```

- `lib/features/modeling/behavior/ReplaceElementBehaviour.js`: This file is responsible for replacing elements in the BPMN diagram, which is likely involved in the transition between parallel and sequential multi-instance configurations.
- `lib/features/modeling/behavior/SubProcessPlaneBehavior.js`: This file manages the behavior of sub-processes, including their properties and transitions, which is directly related to the issue.
- `lib/features/modeling/behavior/UpdateFlowNodeRefsBehavior.js`: This file updates flow node references, which could be relevant to ensuring that properties are correctly maintained during transitions.
- `lib/features/modeling/cmd/UpdatePropertiesHandler.js`: This file handles property updates, which is crucial for preserving properties during changes.
- `lib/util/ModelUtil.js`: This file contains utility functions for working with BPMN elements, including retrieving business objects and checking types, which could be involved in the property management logic.
