1. **Identify the wrong behavior involved in `GitHub Problem Description`:**
   - The issue is that F# type annotations are not being highlighted correctly. In the provided screenshot, the type annotations such as `int`, `double`, and `MyUnion` are not highlighted with distinct colors, unlike the desired result shown in the Visual Studio screenshot.

2. **Analyze the cause behind the wrong behavior:**
   - The cause is likely due to the lack of specific syntax highlighting rules for F# type annotations in the Prism.js configuration. The current rules may not recognize these type annotations as distinct tokens that require special highlighting.

3. **Find up to 5 files most related to the cause from `Repository Information`:**

```
components/prism-fsharp.js
components/prism-core.js
plugins/highlight-keywords/prism-highlight-keywords.js
components/prism-flow.js
components/prism-jsx.js
```

- `components/prism-fsharp.js`: This file should contain the specific rules for F# syntax highlighting. If it doesn't exist, it needs to be created or updated to include rules for type annotations.
- `components/prism-core.js`: This file contains the core functionality of Prism.js, including tokenization and highlighting. It may need adjustments to properly integrate the new F# rules.
- `plugins/highlight-keywords/prism-highlight-keywords.js`: This plugin allows for custom CSS class assignment to keyword tokens, which could be useful for highlighting F# type annotations.
- `components/prism-flow.js`: This file handles Flow syntax highlighting, which has some similarities to F# in terms of type annotations. It may provide useful patterns or rules that can be adapted for F#.
- `components/prism-jsx.js`: This file handles JSX syntax highlighting, which involves complex nested structures. Some of its tokenization strategies might be applicable to F# type annotations.
