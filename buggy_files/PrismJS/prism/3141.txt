1. **Identify the wrong behavior involved in `GitHub Problem Description`:**
   The wrong behavior is that SQL keywords surrounded by backticks (`) are not being highlighted as strings. Instead, they are displayed in the default text color, making them indistinguishable from other parts of the SQL query.

2. **Analyze the cause behind the wrong behavior:**
   The issue arises because the current SQL grammar definition in Prism.js does not include a pattern that recognizes backticks (`) as string delimiters. As a result, the SQL keywords enclosed in backticks are not being matched by the string pattern and thus are not highlighted as strings.

3. **Find up to 5 files most related to the cause from `Repository Information`:**

```
components/prism-sql.js
components/prism-core.js
components/prism-markup.js
plugins/keep-markup/prism-keep-markup.js
plugins/unescaped-markup/prism-unescaped-markup.js
```

- **`components/prism-sql.js`**: This file defines the SQL language grammar for Prism.js. It is the most relevant file because it contains the rules for highlighting SQL syntax, including strings. The issue described in the GitHub problem description is directly related to the SQL grammar definition.
  
- **`components/prism-core.js`**: This file contains the core functionality of Prism.js, including the tokenization engine and language processing. While not directly responsible for the SQL grammar, it is essential for understanding how language definitions are processed and applied.

- **`components/prism-markup.js`**: This file handles markup languages and their embedded languages. Although SQL is not a markup language, it can be embedded in markup languages like HTML. This file might be relevant if the SQL code is part of a larger markup document.

- **`plugins/keep-markup/prism-keep-markup.js`**: This plugin preserves original markup during code highlighting. It might be relevant if the SQL code is embedded in a markup language and the markup needs to be preserved during highlighting.

- **`plugins/unescaped-markup/prism-unescaped-markup.js`**: This plugin processes unescaped markup within code blocks. It might be relevant if the SQL code contains unescaped markup that needs to be handled correctly during highlighting.
