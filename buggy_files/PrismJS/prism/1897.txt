1. **Identify the wrong behavior involved in `GitHub Problem Description`:**
   The issue described is that the punctuation of italic text using `*` and `_` in Markdown is too greedy. This means that the parser matches any number of leading `*`s and `_`s, which can lead to incorrect highlighting of text that should not be italicized.

2. **Analyze the cause behind the wrong behavior:**
   The cause is likely due to the regex pattern used for matching italic text in the Markdown language definition. The current pattern is too permissive and matches more characters than intended, leading to incorrect highlighting. The suggested solution involves modifying the regex pattern to be less greedy and only match the necessary characters.

3. **Find up to 5 files most related to the cause from `Repository Information`:**

```
components/prism-markdown.js
components/prism-core.js
plugins/normalize-whitespace/prism-normalize-whitespace.js
components/prism-markup.js
components/prism-jsx.js
```

- `components/prism-markdown.js`: This file contains the Markdown language definition and is directly responsible for defining the regex patterns used for italic text. It is the most relevant file to modify to fix the issue.
- `components/prism-core.js`: This file contains the core functionality of Prism.js, including the tokenization and highlighting functions. It may need to be checked to ensure that the changes to the Markdown language definition are properly integrated.
- `plugins/normalize-whitespace/prism-normalize-whitespace.js`: This plugin handles whitespace normalization, which could indirectly affect how the regex patterns match text. It might need to be considered if the issue involves whitespace handling.
- `components/prism-markup.js`: This file contains the markup language definition, which includes rules for HTML and other markup languages. It may be relevant if the issue involves interactions between Markdown and other markup languages.
- `components/prism-jsx.js`: This file contains the JSX language definition, which includes rules for JavaScript and HTML-like syntax. It may be relevant if the issue involves interactions between Markdown and JSX.
